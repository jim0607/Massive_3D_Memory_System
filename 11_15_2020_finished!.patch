Index: gradient_descent.py
===================================================================
--- gradient_descent.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ gradient_descent.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
@@ -1,121 +0,0 @@
-from __future__ import division
-import numpy as np
-import fidimag.extensions.clib as clib
-# import fidimag.common.constant as const
-
-from .minimiser_base import MinimiserBase
-
-
-class GradientDescentMinimiser(MinimiserBase):
-    """
-    exchange_coeff simple minimisation algorithm, where the evolution of the magnetisation
-    follows the system's torque
-
-        CHECK:
-
-        h = (m_i + H) / || (m_i + H) ||
-        m_i+1 = m_i + damping_constant * (h_i - m_i)
-    """
-
-    def __init__(self, mesh, spin,
-                 magnetisation, magnetisation_inv, field, pins,
-                 interactions,
-                 name,
-                 data_saver,
-                 use_jac=False,
-                 integrator=None
-                 ):
-
-        # Inherit from the base minimiser class
-        super(GradientDescentMinimiser, self).__init__(mesh, spin,
-                                                       magnetisation, magnetisation_inv,
-                                                       field,
-                                                       pins,
-                                                       interactions,
-                                                       name,
-                                                       data_saver
-                                                       )
-
-        self.t = 1e-4
-        self._alpha = 0.1
-        self._alpha_field = self._alpha * np.ones_like(self.spin)
-        self.spin_last = np.zeros_like(spin)
-        self._new_spin = np.zeros_like(spin)
-
-    @property
-    def alpha(self):
-        """
-        Returns the array with the spatially dependent Gilbert damping
-        per mesh/lattice site
-        """
-        return self._alpha
-
-    @alpha.setter
-    def set_alpha(self, value):
-        """
-        """
-        self._alpha = value
-        self._alpha_field = value * np.ones_like(self.spin)
-
-    def run_step(self):
-
-        self.spin_last[:] = self.spin[:]
-        self.update_effective_field()
-
-        self._new_spin[self._material] = (self.spin + self.field)[self._material]
-        clib.normalise_spin(self._new_spin, self._pins, self.n)
-
-        self._new_spin[self._material] = (self.spin_last +
-                                          self._alpha_field * (self._new_spin - self.spin_last))[self._material]
-        self.spin[:] = self._new_spin[:]
-        clib.normalise_spin(self.spin, self._pins, self.n)
-
-    def minimise(self, stopping_dm=1e-2, max_steps=2000,
-                 save_data_steps=10, save_m_steps=None, save_vtk_steps=None,
-                 log_steps=1000
-                 ):
-        """
-
-        """
-
-        self.step = 0
-
-        # Only update site with magnetisation > 0 which are not pinned
-        self._material = np.logical_and(np.repeat(self._magnetisation, 3) > 0.0,
-                                        np.repeat(1 - self._pins, 3).astype(np.bool))
-
-        self.spin_last[:] = self.spin[:]
-        self.compute_effective_field()
-        while self.step < max_steps:
-
-            self.run_step()
-
-            max_dm = (self.spin - self.spin_last).reshape(-1, 3) ** 2
-            max_dm = np.max(np.sqrt(np.sum(max_dm, axis=1)))
-
-            if self.step % log_steps == 0:
-                print("#max_tau={:<8.3g} max_dm={:<10.3g} counter={}".format(
-                    np.max(np.abs(self.tau)),
-                    max_dm, self.step))
-
-            if max_dm < stopping_dm and self.step > 0:
-                print("FINISHED AT: max_tau={:<8.3g} max_dm={:<10.3g} counter={}".format(
-                      np.max(np.abs(self.tau)),
-                      max_dm, self.step))
-
-                self.compute_effective_field()
-                self.data_saver.save()
-
-                break
-
-            if self.step % save_data_steps == 0:
-                # update field before saving data
-                self.compute_effective_field()
-                self.data_saver.save()
-
-            if (save_vtk_steps is not None) and (self.step % save_vtk_steps == 0):
-                self.save_vtk()
-            if (save_m_steps is not None) and (self.step % save_m_steps == 0):
-                self.save_m()
-
-            self.step += 1
Index: plot_m_vs_time.py
===================================================================
--- plot_m_vs_time.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ plot_m_vs_time.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
@@ -1,43 +0,0 @@
-import numpy as np
-from matplotlib import pyplot as plt
-import os
-
-curr_folder = os.getcwd()
-curr_folder = os.path.join(curr_folder, "data")
-
-data = np.loadtxt('data/standard_problem.dat')
-data1 = np.loadtxt("data/standard_problem_test.dat")
-
-time = data[:, 0]
-mx = data[:, 1]
-my = data[:, 2]
-mz = data[:, 3]
-
-time1 = data1[:, 0]
-mx1 = data1[:, 1]
-my1 = data1[:, 2]
-mz1 = data1[:, 3]
-
-plt.subplot(3, 1, 1)
-plt.plot(time, mx)
-plt.plot(time1, mx1, '-')
-plt.title('Test for a standard problem')
-plt.ylabel('<mx>')
-
-plt.subplot(3, 1, 2)
-plt.plot(time, my)
-plt.plot(time1, my1, '-')
-plt.ylabel('<my>')
-
-plt.subplot(3, 1, 3)
-plt.plot(time, -mz)
-plt.plot(time1, mz1, '-')
-plt.ylabel('<mz>')
-plt.xlabel('time (ns)')
-
-plt.tight_layout()
-
-save_fig_name = "Test_for_a_standard_problem" + ".png"
-plt.savefig(os.path.join(curr_folder, save_fig_name), bbox_inches = "tight", dpi = 1200)
-
-plt.show()
\ No newline at end of file
Index: plot_system_state.py
===================================================================
--- plot_system_state.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ plot_system_state.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
@@ -1,53 +0,0 @@
-from matplotlib import pyplot as plt
-from constant import system_size
-import numpy as np
-import os
-
-curr_folder = os.getcwd()
-curr_folder = os.path.join(curr_folder, "data")
-
-
-def plot_magnetization(magnetization, k=1):
-    """
-    plot magnetization
-
-    @type magnetization: object
-    """
-    X, Y = np.mgrid[0:system_size[0], 0:system_size[1]]
-    U = magnetization[:, :, :, 0].flatten()
-    V = magnetization[:, :, :, 1].flatten()
-
-    # plt.axis([0.025, 0.025, 0.95, 0.95])
-
-    plt.quiver(X[::k, ::k], Y[::k, ::k], U[::k], V[::k],
-               units = 'dots', color = 'Teal', headlength = 7)
-
-    plt.xlim(-1, system_size[0])
-    plt.xticks(())
-    plt.ylim(-1, system_size[1])
-    plt.yticks(())
-
-    plt.show()
-
-
-def save_magnetization_fig(magnetization, k=1, save_fig_name =""):
-    """
-    plot magnetization
-
-    @type magnetization: object
-    """
-    X, Y = np.mgrid[0:system_size[0], 0:system_size[1]]
-    U = magnetization[:, :, :, 0].flatten()
-    V = magnetization[:, :, :, 1].flatten()
-
-    # plt.axis([0.025, 0.025, 0.95, 0.95])
-
-    plt.quiver(X[::k, ::k], Y[::k, ::k], U[::k], V[::k],
-               units = 'dots', color = 'Teal', headlength = 5)
-
-    plt.xlim(-1, system_size[0])
-    plt.xticks(())
-    plt.ylim(-1, system_size[1])
-    plt.yticks(())
-
-    plt.savefig(os.path.join(curr_folder, save_fig_name), bbox_inches = "tight", dpi = 240)
Index: solver.py
===================================================================
--- solver.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ solver.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
@@ -1,114 +0,0 @@
-from constant import gamma, damping_constant, pi, atan2, eps
-import numpy as np
-from field_calculation import calculate_effective_field
-import os
-
-curr_folder = os.getcwd()
-curr_folder = os.path.join(curr_folder, "data")
-
-
-def llg_equation_rhs(mangetization, calculate_effective_field, zeeman_field):
-    """
-    compute right side of the Landau Lifshitz Gilbert equation
-    https://en.wikipedia.org/wiki/Landau%E2%80%93Lifshitz%E2%80%93Gilbert_equation
-
-    @param zeeman_field:
-    @param calculate_effective_field:
-    @type mangetization: object
-    """
-    total_field = calculate_effective_field(mangetization) + zeeman_field
-    llg_right_hand_side = - gamma / (1 + damping_constant ** 2) * np.cross(mangetization, total_field) - damping_constant * gamma / (1 + damping_constant ** 2) * np.cross(mangetization, np.cross(mangetization, total_field))
-
-    return llg_right_hand_side
-
-
-# compute llg step using Euler method
-def llg_euler_evolver(magnetization, dt, zeeman_field=0.0):
-    """
-    In mathematics and computational science, the Euler method (also called forward Euler method)
-    is a first order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value.
-    It is the most basic explicit method for numerical integration of ordinary differential equations and is the simplest Runge Kutta method.
-    The Euler method is named after Leonhard Euler, who treated it in his book Institutionum calculi integralis (published 1768 1870)
-    https://en.wikipedia.org/wiki/Euler_method
-
-    @type magnetization: object
-    """
-    dm_dt = llg_equation_rhs(magnetization, calculate_effective_field, zeeman_field)
-    # print ("error = %g" % (dm_dt * dt).mean())
-    magnetization += dt * dm_dt
-
-    return magnetization / np.repeat(np.sqrt((magnetization * magnetization).sum(axis = 3)), 3).reshape(magnetization.shape)
-
-
-# compute llg step using RK4
-def llg_rk4_evolver(magnetization, dt, zeeman_field=0.0):
-    """
-    In numerical analysis, the Rung Kutta methods are a family of implicit and explicit iterative methods,
-    which include the well-known routine called the Euler Method,
-    used in temporal discretization for the approximate solutions of ordinary differential equations.
-    These methods were developed around 1900 by the German mathematicians Carl Runge and Wilhelm Kutta.
-    The most widely known member of the Runge Kutta family is generally referred to as "RK4",
-    the "classic Runge Kutta method" or simply as "the Runge Kutta method".
-    https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods
-
-    @type magnetization: object
-    """
-    k1 = llg_equation_rhs(magnetization, calculate_effective_field, zeeman_field)
-    k2 = llg_equation_rhs(magnetization + (dt / 2.0) * k1, calculate_effective_field, zeeman_field)
-    k3 = llg_equation_rhs(magnetization + (dt / 2.0) * k2, calculate_effective_field, zeeman_field)
-    k4 = llg_equation_rhs(magnetization + dt * k3, calculate_effective_field, zeeman_field)
-    dm_dt = (1.0 / 6.0) * (k1 + 2 * k2 + 2 * k3 + k4)
-    magnetization += dt * dm_dt
-    magnetization = magnetization / np.repeat(np.sqrt((magnetization * magnetization).sum(axis = 3)), 3).reshape(magnetization.shape)
-
-    return magnetization
-
-
-def cost_func(magnetization_curr, magnetization_prev):
-    """
-    The cost_func is defined as the max of (dm_curr - dm_prev for each spin in the 3D system)
-
-    @type magnetization_curr: current prediction
-    @type magnetization_prev: last prediction
-    """
-    n_x = len(magnetization_curr)
-    n_y = len(magnetization_curr[0])
-    n_z = len(magnetization_curr[0][0])
-    max_diff = float("-inf")
-    for x in range(n_x):
-        for y in range(n_y):
-            for z in range(n_z):
-                diff_sq = 0
-                for i in range(3):
-                    diff_sq += (magnetization_curr[x][y][z][i] - magnetization_prev[x][y][z][i]) ** 2
-                diff = np.sqrt(diff_sq)
-                max_diff = max(diff, max_diff)
-
-    return max_diff
-
-
-def gradient_descent(magnetization, dt, zeeman_field=0.0):
-    """
-    gradient descent method to compute the equilibrium state of the 3D system
-
-    @type magnetization: object
-    """
-    magnetization_prev = np.copy(magnetization)
-    llg_rk4_evolver(magnetization, dt, zeeman_field)
-
-    cost = cost_func(magnetization, magnetization_prev)
-
-    costs = []
-    costs.append(cost)
-
-    while cost > eps:
-        magnetization_prev = np.copy(magnetization)
-        llg_rk4_evolver(magnetization, dt, zeeman_field)
-
-        cost = cost_func(magnetization, magnetization_prev)
-
-        costs.append(cost)
-
-    np.savetxt(curr_folder + "\costs_vs_time.dat", costs)
-
-    # print "cost = %e" % (cost)
Index: data/standard_problem.dat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/standard_problem.dat	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ data/standard_problem.dat	(date 1605512602657)
@@ -1,1000 +1,1000 @@
-0.000000 0.707568 0.707565 -0.000007
-0.001000 0.697534 0.713268 -0.068521
-0.002000 0.573567 0.498992 0.649576
-0.003000 -0.107461 0.993724 -0.030454
-0.004000 0.989634 0.141014 0.026221
-0.005000 0.036061 0.994131 -0.101876
-0.006000 0.988500 0.137909 0.062028
-0.007000 0.086191 0.988905 -0.120988
-0.008000 0.988653 0.135082 0.065714
-0.009000 0.091886 0.988473 -0.120325
-0.010000 0.988485 0.134972 0.068407
-0.011000 0.095034 0.988269 -0.119553
-0.012000 0.988372 0.134849 0.070258
-0.013000 0.097157 0.988139 -0.118917
-0.014000 0.988292 0.134726 0.071607
-0.015000 0.098685 0.988050 -0.118400
-0.016000 0.988232 0.134613 0.072629
-0.017000 0.099832 0.987985 -0.117979
-0.018000 0.988187 0.134514 0.073426
-0.019000 0.100719 0.987936 -0.117632
-0.020000 0.988151 0.134426 0.074060
-0.021000 0.101420 0.987899 -0.117344
-0.022000 0.988123 0.134350 0.074572
-0.023000 0.101984 0.987869 -0.117104
-0.024000 0.988100 0.134284 0.074992
-0.025000 0.102443 0.987845 -0.116902
-0.026000 0.988081 0.134227 0.075339
-0.027000 0.102822 0.987826 -0.116732
-0.028000 0.988066 0.134178 0.075629
-0.029000 0.103137 0.987810 -0.116587
-0.030000 0.988053 0.134134 0.075873
-0.031000 0.103400 0.987797 -0.116463
-0.032000 0.988042 0.134097 0.076079
-0.033000 0.103622 0.987786 -0.116357
-0.034000 0.988033 0.134064 0.076254
-0.035000 0.103811 0.987777 -0.116266
-0.036000 0.988025 0.134035 0.076403
-0.037000 0.103971 0.987769 -0.116187
-0.038000 0.988019 0.134009 0.076531
-0.039000 0.104108 0.987763 -0.116119
-0.040000 0.988013 0.133986 0.076642
-0.041000 0.104226 0.987757 -0.116059
-0.042000 0.988008 0.133966 0.076738
-0.043000 0.104328 0.987753 -0.116006
-0.044000 0.988004 0.133948 0.076821
-0.045000 0.104416 0.987749 -0.115960
-0.046000 0.988000 0.133931 0.076893
-0.047000 0.104493 0.987745 -0.115919
-0.048000 0.987997 0.133916 0.076957
-0.049000 0.104560 0.987742 -0.115882
-0.050000 0.987995 0.133903 0.077013
-0.051000 0.104619 0.987740 -0.115850
-0.052000 0.987992 0.133890 0.077063
-0.053000 0.104671 0.987738 -0.115820
-0.054000 0.987990 0.133878 0.077108
-0.055000 0.104717 0.987736 -0.115793
-0.056000 0.987988 0.133867 0.077148
-0.057000 0.104758 0.987734 -0.115768
-0.058000 0.987987 0.133856 0.077184
-0.059000 0.104795 0.987733 -0.115745
-0.060000 0.987985 0.133846 0.077217
-0.061000 0.104828 0.987731 -0.115723
-0.062000 0.987984 0.133835 0.077248
-0.063000 0.104858 0.987730 -0.115702
-0.064000 0.987983 0.133825 0.077276
-0.065000 0.104886 0.987729 -0.115682
-0.066000 0.987982 0.133815 0.077303
-0.067000 0.104912 0.987729 -0.115662
-0.068000 0.987981 0.133804 0.077329
-0.069000 0.104936 0.987728 -0.115643
-0.070000 0.987980 0.133794 0.077353
-0.071000 0.104959 0.987728 -0.115623
-0.072000 0.987980 0.133782 0.077378
-0.073000 0.104981 0.987727 -0.115603
-0.074000 0.987979 0.133770 0.077402
-0.075000 0.105002 0.987727 -0.115582
-0.076000 0.987979 0.133757 0.077426
-0.077000 0.105023 0.987727 -0.115560
-0.078000 0.987978 0.133742 0.077450
-0.079000 0.105044 0.987727 -0.115537
-0.080000 0.987978 0.133727 0.077475
-0.081000 0.105064 0.987727 -0.115513
-0.082000 0.987977 0.133709 0.077501
-0.083000 0.105084 0.987727 -0.115486
-0.084000 0.987977 0.133690 0.077528
-0.085000 0.105105 0.987727 -0.115456
-0.086000 0.987977 0.133667 0.077557
-0.087000 0.105126 0.987728 -0.115424
-0.088000 0.987977 0.133642 0.077588
-0.089000 0.105147 0.987729 -0.115388
-0.090000 0.987977 0.133613 0.077620
-0.091000 0.105168 0.987730 -0.115348
-0.092000 0.987978 0.133579 0.077655
-0.093000 0.105189 0.987731 -0.115304
-0.094000 0.987978 0.133540 0.077692
-0.095000 0.105211 0.987733 -0.115254
-0.096000 0.987979 0.133495 0.077732
-0.097000 0.105231 0.987735 -0.115198
-0.098000 0.987981 0.133443 0.077773
-0.099000 0.105250 0.987738 -0.115136
-0.100000 0.987983 0.133382 0.077816
-0.101000 0.105266 0.987742 -0.115068
-0.102000 0.987986 0.133313 0.077858
-0.103000 0.105280 0.987746 -0.114995
-0.104000 0.987989 0.133236 0.077900
-0.105000 0.105289 0.987750 -0.114918
-0.106000 0.987994 0.133151 0.077938
-0.107000 0.105292 0.987756 -0.114839
-0.108000 0.987999 0.133060 0.077971
-0.109000 0.105290 0.987761 -0.114760
-0.110000 0.988005 0.132966 0.077997
-0.111000 0.105283 0.987767 -0.114686
-0.112000 0.988011 0.132874 0.078015
-0.113000 0.105270 0.987773 -0.114619
-0.114000 0.988018 0.132788 0.078025
-0.115000 0.105253 0.987778 -0.114561
-0.116000 0.988024 0.132711 0.078027
-0.117000 0.105234 0.987783 -0.114514
-0.118000 0.988030 0.132646 0.078025
-0.119000 0.105214 0.987787 -0.114477
-0.120000 0.988034 0.132594 0.078018
-0.121000 0.105195 0.987791 -0.114449
-0.122000 0.988038 0.132553 0.078010
-0.123000 0.105177 0.987794 -0.114429
-0.124000 0.988041 0.132522 0.078002
-0.125000 0.105161 0.987796 -0.114415
-0.126000 0.988044 0.132499 0.077994
-0.127000 0.105148 0.987798 -0.114405
-0.128000 0.988046 0.132483 0.077986
-0.129000 0.105137 0.987799 -0.114399
-0.130000 0.988047 0.132471 0.077981
-0.131000 0.105128 0.987800 -0.114394
-0.132000 0.988048 0.132463 0.077976
-0.133000 0.105121 0.987801 -0.114390
-0.134000 0.988049 0.132457 0.077973
-0.135000 0.105116 0.987802 -0.114387
-0.136000 0.988049 0.132452 0.077971
-0.137000 0.105112 0.987802 -0.114384
-0.138000 0.988050 0.132448 0.077970
-0.139000 0.105110 0.987803 -0.114381
-0.140000 0.988050 0.132445 0.077970
-0.141000 0.105109 0.987803 -0.114379
-0.142000 0.988050 0.132443 0.077971
-0.143000 0.105109 0.987803 -0.114376
-0.144000 0.988050 0.132441 0.077972
-0.145000 0.105110 0.987803 -0.114373
-0.146000 0.988050 0.132439 0.077974
-0.147000 0.105111 0.987803 -0.114371
-0.148000 0.988050 0.132437 0.077976
-0.149000 0.105113 0.987803 -0.114368
-0.150000 0.988050 0.132435 0.077979
-0.151000 0.105115 0.987803 -0.114365
-0.152000 0.988050 0.132433 0.077982
-0.153000 0.105118 0.987803 -0.114362
-0.154000 0.988050 0.132432 0.077985
-0.155000 0.105121 0.987803 -0.114359
-0.156000 0.988050 0.132430 0.077989
-0.157000 0.105124 0.987803 -0.114355
-0.158000 0.988050 0.132428 0.077993
-0.159000 0.105127 0.987803 -0.114352
-0.160000 0.988050 0.132426 0.077996
-0.161000 0.105131 0.987803 -0.114349
-0.162000 0.988050 0.132424 0.078000
-0.163000 0.105134 0.987803 -0.114345
-0.164000 0.988049 0.132423 0.078005
-0.165000 0.105138 0.987803 -0.114341
-0.166000 0.988049 0.132421 0.078009
-0.167000 0.105142 0.987803 -0.114338
-0.168000 0.988049 0.132419 0.078013
-0.169000 0.105146 0.987803 -0.114334
-0.170000 0.988049 0.132416 0.078018
-0.171000 0.105150 0.987803 -0.114329
-0.172000 0.988049 0.132414 0.078023
-0.173000 0.105155 0.987803 -0.114325
-0.174000 0.988049 0.132412 0.078028
-0.175000 0.105159 0.987803 -0.114321
-0.176000 0.988049 0.132409 0.078033
-0.177000 0.105164 0.987803 -0.114316
-0.178000 0.988048 0.132407 0.078039
-0.179000 0.105169 0.987803 -0.114311
-0.180000 0.988048 0.132404 0.078045
-0.181000 0.105174 0.987803 -0.114305
-0.182000 0.988048 0.132401 0.078051
-0.183000 0.105179 0.987803 -0.114300
-0.184000 0.988048 0.132398 0.078058
-0.185000 0.105185 0.987803 -0.114293
-0.186000 0.988048 0.132394 0.078065
-0.187000 0.105191 0.987803 -0.114287
-0.188000 0.988047 0.132390 0.078072
-0.189000 0.105197 0.987803 -0.114280
-0.190000 0.988047 0.132386 0.078080
-0.191000 0.105204 0.987803 -0.114272
-0.192000 0.988047 0.132382 0.078089
-0.193000 0.105211 0.987803 -0.114263
-0.194000 0.988047 0.132376 0.078098
-0.195000 0.105219 0.987803 -0.114254
-0.196000 0.988047 0.132371 0.078108
-0.197000 0.105227 0.987803 -0.114244
-0.198000 0.988046 0.132364 0.078120
-0.199000 0.105236 0.987803 -0.114232
-0.200000 0.988046 0.132357 0.078132
-0.201000 0.105246 0.987803 -0.114219
-0.202000 0.988046 0.132349 0.078145
-0.203000 0.105256 0.987803 -0.114205
-0.204000 0.988046 0.132339 0.078160
-0.205000 0.105267 0.987803 -0.114189
-0.206000 0.988045 0.132328 0.078176
-0.207000 0.105279 0.987804 -0.114170
-0.208000 0.988045 0.132316 0.078195
-0.209000 0.105292 0.987804 -0.114149
-0.210000 0.988045 0.132301 0.078215
-0.211000 0.105306 0.987805 -0.114125
-0.212000 0.988045 0.132283 0.078238
-0.213000 0.105322 0.987805 -0.114097
-0.214000 0.988045 0.132262 0.078264
-0.215000 0.105338 0.987806 -0.114065
-0.216000 0.988045 0.132236 0.078293
-0.217000 0.105354 0.987808 -0.114027
-0.218000 0.988046 0.132205 0.078325
-0.219000 0.105372 0.987809 -0.113983
-0.220000 0.988046 0.132167 0.078360
-0.221000 0.105389 0.987811 -0.113932
-0.222000 0.988048 0.132121 0.078398
-0.223000 0.105404 0.987814 -0.113873
-0.224000 0.988049 0.132066 0.078439
-0.225000 0.105418 0.987818 -0.113807
-0.226000 0.988052 0.132000 0.078479
-0.227000 0.105427 0.987822 -0.113734
-0.228000 0.988056 0.131924 0.078519
-0.229000 0.105432 0.987827 -0.113656
-0.230000 0.988061 0.131838 0.078554
-0.231000 0.105431 0.987833 -0.113576
-0.232000 0.988066 0.131747 0.078582
-0.233000 0.105424 0.987839 -0.113499
-0.234000 0.988073 0.131656 0.078603
-0.235000 0.105412 0.987845 -0.113428
-0.236000 0.988079 0.131569 0.078616
-0.237000 0.105396 0.987851 -0.113365
-0.238000 0.988085 0.131489 0.078624
-0.239000 0.105379 0.987856 -0.113311
-0.240000 0.988091 0.131419 0.078625
-0.241000 0.105360 0.987861 -0.113266
-0.242000 0.988096 0.131360 0.078623
-0.243000 0.105341 0.987865 -0.113231
-0.244000 0.988100 0.131311 0.078618
-0.245000 0.105323 0.987868 -0.113204
-0.246000 0.988104 0.131273 0.078610
-0.247000 0.105306 0.987871 -0.113185
-0.248000 0.988107 0.131245 0.078603
-0.249000 0.105293 0.987873 -0.113172
-0.250000 0.988109 0.131226 0.078596
-0.251000 0.105282 0.987875 -0.113163
-0.252000 0.988110 0.131212 0.078590
-0.253000 0.105273 0.987876 -0.113157
-0.254000 0.988111 0.131203 0.078586
-0.255000 0.105267 0.987876 -0.113152
-0.256000 0.988112 0.131197 0.078584
-0.257000 0.105264 0.987877 -0.113149
-0.258000 0.988113 0.131193 0.078583
-0.259000 0.105262 0.987877 -0.113145
-0.260000 0.988113 0.131189 0.078584
-0.261000 0.105261 0.987878 -0.113142
-0.262000 0.988113 0.131186 0.078585
-0.263000 0.105262 0.987878 -0.113138
-0.264000 0.988113 0.131184 0.078588
-0.265000 0.105263 0.987878 -0.113135
-0.266000 0.988113 0.131181 0.078591
-0.267000 0.105266 0.987878 -0.113131
-0.268000 0.988113 0.131179 0.078595
-0.269000 0.105269 0.987878 -0.113126
-0.270000 0.988113 0.131176 0.078599
-0.271000 0.105272 0.987878 -0.113122
-0.272000 0.988113 0.131174 0.078604
-0.273000 0.105276 0.987878 -0.113117
-0.274000 0.988113 0.131171 0.078609
-0.275000 0.105281 0.987878 -0.113111
-0.276000 0.988112 0.131168 0.078615
-0.277000 0.105286 0.987878 -0.113106
-0.278000 0.988112 0.131164 0.078622
-0.279000 0.105291 0.987878 -0.113099
-0.280000 0.988112 0.131160 0.078629
-0.281000 0.105297 0.987878 -0.113092
-0.282000 0.988112 0.131156 0.078637
-0.283000 0.105303 0.987878 -0.113084
-0.284000 0.988112 0.131151 0.078645
-0.285000 0.105310 0.987878 -0.113076
-0.286000 0.988112 0.131146 0.078654
-0.287000 0.105317 0.987879 -0.113066
-0.288000 0.988111 0.131140 0.078664
-0.289000 0.105324 0.987879 -0.113055
-0.290000 0.988111 0.131132 0.078675
-0.291000 0.105332 0.987879 -0.113043
-0.292000 0.988111 0.131123 0.078687
-0.293000 0.105340 0.987879 -0.113029
-0.294000 0.988111 0.131113 0.078700
-0.295000 0.105349 0.987880 -0.113013
-0.296000 0.988111 0.131100 0.078715
-0.297000 0.105358 0.987880 -0.112994
-0.298000 0.988111 0.131085 0.078731
-0.299000 0.105367 0.987881 -0.112972
-0.300000 0.988112 0.131067 0.078749
-0.301000 0.105376 0.987882 -0.112947
-0.302000 0.988112 0.131044 0.078767
-0.303000 0.105383 0.987883 -0.112919
-0.304000 0.988113 0.131017 0.078786
-0.305000 0.105389 0.987885 -0.112888
-0.306000 0.988115 0.130986 0.078804
-0.307000 0.105393 0.987887 -0.112855
-0.308000 0.988117 0.130950 0.078821
-0.309000 0.105395 0.987889 -0.112821
-0.310000 0.988119 0.130913 0.078834
-0.311000 0.105394 0.987892 -0.112789
-0.312000 0.988121 0.130876 0.078842
-0.313000 0.105391 0.987894 -0.112761
-0.314000 0.988124 0.130842 0.078848
-0.315000 0.105386 0.987896 -0.112738
-0.316000 0.988126 0.130814 0.078850
-0.317000 0.105382 0.987898 -0.112720
-0.318000 0.988128 0.130792 0.078851
-0.319000 0.105379 0.987899 -0.112707
-0.320000 0.988129 0.130776 0.078852
-0.321000 0.105377 0.987900 -0.112697
-0.322000 0.988130 0.130765 0.078853
-0.323000 0.105376 0.987900 -0.112689
-0.324000 0.988130 0.130757 0.078856
-0.325000 0.105377 0.987901 -0.112682
-0.326000 0.988131 0.130751 0.078859
-0.327000 0.105378 0.987901 -0.112675
-0.328000 0.988131 0.130745 0.078863
-0.329000 0.105381 0.987901 -0.112669
-0.330000 0.988131 0.130741 0.078868
-0.331000 0.105385 0.987901 -0.112662
-0.332000 0.988131 0.130736 0.078875
-0.333000 0.105390 0.987902 -0.112655
-0.334000 0.988131 0.130731 0.078882
-0.335000 0.105395 0.987902 -0.112647
-0.336000 0.988131 0.130727 0.078890
-0.337000 0.105402 0.987902 -0.112638
-0.338000 0.988130 0.130721 0.078899
-0.339000 0.105409 0.987902 -0.112628
-0.340000 0.988130 0.130715 0.078909
-0.341000 0.105417 0.987902 -0.112617
-0.342000 0.988130 0.130708 0.078920
-0.343000 0.105425 0.987902 -0.112605
-0.344000 0.988130 0.130700 0.078933
-0.345000 0.105435 0.987902 -0.112591
-0.346000 0.988130 0.130691 0.078947
-0.347000 0.105445 0.987903 -0.112576
-0.348000 0.988129 0.130680 0.078962
-0.349000 0.105456 0.987903 -0.112557
-0.350000 0.988129 0.130667 0.078980
-0.351000 0.105468 0.987903 -0.112536
-0.352000 0.988129 0.130652 0.079000
-0.353000 0.105480 0.987904 -0.112512
-0.354000 0.988129 0.130633 0.079022
-0.355000 0.105494 0.987905 -0.112483
-0.356000 0.988130 0.130610 0.079047
-0.357000 0.105507 0.987906 -0.112449
-0.358000 0.988130 0.130582 0.079075
-0.359000 0.105521 0.987908 -0.112410
-0.360000 0.988131 0.130547 0.079105
-0.361000 0.105533 0.987910 -0.112364
-0.362000 0.988132 0.130504 0.079137
-0.363000 0.105543 0.987913 -0.112311
-0.364000 0.988134 0.130452 0.079169
-0.365000 0.105550 0.987917 -0.112252
-0.366000 0.988138 0.130390 0.079200
-0.367000 0.105552 0.987921 -0.112189
-0.368000 0.988142 0.130320 0.079227
-0.369000 0.105549 0.987926 -0.112125
-0.370000 0.988146 0.130245 0.079248
-0.371000 0.105540 0.987931 -0.112064
-0.372000 0.988152 0.130170 0.079260
-0.373000 0.105526 0.987936 -0.112009
-0.374000 0.988157 0.130101 0.079264
-0.375000 0.105509 0.987941 -0.111965
-0.376000 0.988163 0.130042 0.079261
-0.377000 0.105492 0.987944 -0.111931
-0.378000 0.988167 0.129995 0.079255
-0.379000 0.105475 0.987947 -0.111908
-0.380000 0.988170 0.129962 0.079247
-0.381000 0.105461 0.987950 -0.111892
-0.382000 0.988173 0.129939 0.079240
-0.383000 0.105450 0.987951 -0.111882
-0.384000 0.988174 0.129924 0.079234
-0.385000 0.105441 0.987952 -0.111875
-0.386000 0.988175 0.129914 0.079231
-0.387000 0.105435 0.987953 -0.111870
-0.388000 0.988176 0.129907 0.079229
-0.389000 0.105431 0.987954 -0.111865
-0.390000 0.988176 0.129902 0.079229
-0.391000 0.105430 0.987954 -0.111860
-0.392000 0.988177 0.129898 0.079231
-0.393000 0.105430 0.987955 -0.111855
-0.394000 0.988177 0.129894 0.079234
-0.395000 0.105431 0.987955 -0.111850
-0.396000 0.988177 0.129890 0.079238
-0.397000 0.105434 0.987955 -0.111844
-0.398000 0.988177 0.129886 0.079243
-0.399000 0.105438 0.987955 -0.111837
-0.400000 0.988177 0.129881 0.079250
-0.401000 0.105443 0.987956 -0.111829
-0.402000 0.988177 0.129876 0.079257
-0.403000 0.105448 0.987956 -0.111821
-0.404000 0.988176 0.129871 0.079266
-0.405000 0.105455 0.987956 -0.111811
-0.406000 0.988176 0.129864 0.079276
-0.407000 0.105462 0.987956 -0.111799
-0.408000 0.988176 0.129856 0.079287
-0.409000 0.105470 0.987956 -0.111786
-0.410000 0.988176 0.129847 0.079300
-0.411000 0.105478 0.987957 -0.111771
-0.412000 0.988176 0.129835 0.079314
-0.413000 0.105487 0.987957 -0.111753
-0.414000 0.988176 0.129822 0.079329
-0.415000 0.105496 0.987958 -0.111733
-0.416000 0.988177 0.129805 0.079347
-0.417000 0.105504 0.987959 -0.111709
-0.418000 0.988177 0.129784 0.079365
-0.419000 0.105513 0.987960 -0.111681
-0.420000 0.988178 0.129758 0.079385
-0.421000 0.105519 0.987962 -0.111649
-0.422000 0.988179 0.129727 0.079404
-0.423000 0.105524 0.987964 -0.111615
-0.424000 0.988181 0.129691 0.079422
-0.425000 0.105525 0.987967 -0.111579
-0.426000 0.988183 0.129650 0.079437
-0.427000 0.105524 0.987969 -0.111543
-0.428000 0.988186 0.129609 0.079447
-0.429000 0.105519 0.987972 -0.111511
-0.430000 0.988189 0.129569 0.079452
-0.431000 0.105512 0.987974 -0.111484
-0.432000 0.988192 0.129536 0.079453
-0.433000 0.105506 0.987976 -0.111464
-0.434000 0.988194 0.129510 0.079452
-0.435000 0.105499 0.987978 -0.111450
-0.436000 0.988196 0.129491 0.079451
-0.437000 0.105495 0.987979 -0.111439
-0.438000 0.988197 0.129479 0.079450
-0.439000 0.105491 0.987980 -0.111432
-0.440000 0.988197 0.129470 0.079450
-0.441000 0.105490 0.987980 -0.111426
-0.442000 0.988198 0.129463 0.079452
-0.443000 0.105490 0.987981 -0.111420
-0.444000 0.988198 0.129458 0.079454
-0.445000 0.105491 0.987981 -0.111414
-0.446000 0.988198 0.129454 0.079458
-0.447000 0.105494 0.987981 -0.111408
-0.448000 0.988198 0.129449 0.079464
-0.449000 0.105497 0.987981 -0.111401
-0.450000 0.988198 0.129445 0.079470
-0.451000 0.105502 0.987982 -0.111393
-0.452000 0.988198 0.129440 0.079477
-0.453000 0.105507 0.987982 -0.111385
-0.454000 0.988198 0.129434 0.079486
-0.455000 0.105513 0.987982 -0.111375
-0.456000 0.988198 0.129428 0.079495
-0.457000 0.105521 0.987982 -0.111364
-0.458000 0.988198 0.129421 0.079506
-0.459000 0.105529 0.987982 -0.111351
-0.460000 0.988198 0.129412 0.079519
-0.461000 0.105538 0.987983 -0.111337
-0.462000 0.988197 0.129402 0.079533
-0.463000 0.105548 0.987983 -0.111320
-0.464000 0.988197 0.129391 0.079549
-0.465000 0.105558 0.987983 -0.111301
-0.466000 0.988197 0.129377 0.079568
-0.467000 0.105570 0.987984 -0.111278
-0.468000 0.988197 0.129359 0.079588
-0.469000 0.105583 0.987985 -0.111251
-0.470000 0.988197 0.129338 0.079612
-0.471000 0.105596 0.987986 -0.111219
-0.472000 0.988198 0.129312 0.079638
-0.473000 0.105609 0.987988 -0.111182
-0.474000 0.988199 0.129280 0.079668
-0.475000 0.105622 0.987990 -0.111138
-0.476000 0.988200 0.129239 0.079700
-0.477000 0.105633 0.987993 -0.111086
-0.478000 0.988202 0.129189 0.079733
-0.479000 0.105641 0.987996 -0.111028
-0.480000 0.988204 0.129129 0.079766
-0.481000 0.105644 0.988000 -0.110963
-0.482000 0.988208 0.129058 0.079796
-0.483000 0.105642 0.988005 -0.110895
-0.484000 0.988213 0.128979 0.079820
-0.485000 0.105632 0.988011 -0.110828
-0.486000 0.988219 0.128898 0.079834
-0.487000 0.105617 0.988016 -0.110767
-0.488000 0.988225 0.128820 0.079839
-0.489000 0.105599 0.988022 -0.110718
-0.490000 0.988231 0.128754 0.079836
-0.491000 0.105579 0.988026 -0.110680
-0.492000 0.988236 0.128703 0.079829
-0.493000 0.105561 0.988029 -0.110654
-0.494000 0.988239 0.128667 0.079821
-0.495000 0.105546 0.988031 -0.110637
-0.496000 0.988242 0.128642 0.079814
-0.497000 0.105535 0.988033 -0.110625
-0.498000 0.988244 0.128625 0.079809
-0.499000 0.105526 0.988035 -0.110616
-0.500000 0.988245 0.128614 0.079807
-0.501000 0.105521 0.988036 -0.110608
-0.502000 0.988245 0.128605 0.079808
-0.503000 0.105519 0.988036 -0.110600
-0.504000 0.988246 0.128597 0.079811
-0.505000 0.105520 0.988037 -0.110591
-0.506000 0.988246 0.128590 0.079817
-0.507000 0.105522 0.988037 -0.110581
-0.508000 0.988246 0.128583 0.079824
-0.509000 0.105527 0.988038 -0.110570
-0.510000 0.988246 0.128575 0.079834
-0.511000 0.105533 0.988038 -0.110558
-0.512000 0.988246 0.128566 0.079845
-0.513000 0.105541 0.988039 -0.110543
-0.514000 0.988246 0.128556 0.079859
-0.515000 0.105550 0.988039 -0.110526
-0.516000 0.988246 0.128544 0.079874
-0.517000 0.105560 0.988040 -0.110507
-0.518000 0.988246 0.128530 0.079892
-0.519000 0.105572 0.988040 -0.110485
-0.520000 0.988246 0.128514 0.079912
-0.521000 0.105584 0.988041 -0.110459
-0.522000 0.988246 0.128493 0.079935
-0.523000 0.105597 0.988042 -0.110429
-0.524000 0.988246 0.128469 0.079960
-0.525000 0.105610 0.988043 -0.110394
-0.526000 0.988247 0.128439 0.079987
-0.527000 0.105623 0.988045 -0.110354
-0.528000 0.988248 0.128402 0.080015
-0.529000 0.105633 0.988047 -0.110310
-0.530000 0.988250 0.128359 0.080043
-0.531000 0.105642 0.988050 -0.110261
-0.532000 0.988252 0.128310 0.080070
-0.533000 0.105647 0.988053 -0.110211
-0.534000 0.988255 0.128257 0.080094
-0.535000 0.105650 0.988057 -0.110161
-0.536000 0.988258 0.128203 0.080114
-0.537000 0.105651 0.988060 -0.110113
-0.538000 0.988261 0.128151 0.080132
-0.539000 0.105652 0.988063 -0.110068
-0.540000 0.988264 0.128103 0.080149
-0.541000 0.105653 0.988066 -0.110025
-0.542000 0.988267 0.128059 0.080168
-0.543000 0.105656 0.988069 -0.109983
-0.544000 0.988269 0.128015 0.080190
-0.545000 0.105660 0.988072 -0.109937
-0.546000 0.988271 0.127970 0.080216
-0.547000 0.105665 0.988075 -0.109886
-0.548000 0.988273 0.127918 0.080244
-0.549000 0.105668 0.988079 -0.109829
-0.550000 0.988276 0.127859 0.080274
-0.551000 0.105670 0.988083 -0.109767
-0.552000 0.988280 0.127791 0.080303
-0.553000 0.105667 0.988088 -0.109701
-0.554000 0.988284 0.127716 0.080328
-0.555000 0.105659 0.988093 -0.109634
-0.556000 0.988290 0.127637 0.080346
-0.557000 0.105646 0.988099 -0.109572
-0.558000 0.988296 0.127559 0.080356
-0.559000 0.105630 0.988104 -0.109518
-0.560000 0.988301 0.127490 0.080358
-0.561000 0.105613 0.988108 -0.109474
-0.562000 0.988306 0.127432 0.080356
-0.563000 0.105596 0.988112 -0.109442
-0.564000 0.988310 0.127389 0.080351
-0.565000 0.105582 0.988115 -0.109418
-0.566000 0.988313 0.127357 0.080348
-0.567000 0.105571 0.988117 -0.109399
-0.568000 0.988315 0.127332 0.080346
-0.569000 0.105563 0.988119 -0.109382
-0.570000 0.988317 0.127313 0.080349
-0.571000 0.105558 0.988120 -0.109365
-0.572000 0.988318 0.127294 0.080354
-0.573000 0.105555 0.988122 -0.109346
-0.574000 0.988319 0.127274 0.080362
-0.575000 0.105553 0.988124 -0.109325
-0.576000 0.988320 0.127252 0.080373
-0.577000 0.105552 0.988126 -0.109300
-0.578000 0.988321 0.127225 0.080385
-0.579000 0.105551 0.988128 -0.109271
-0.580000 0.988323 0.127194 0.080398
-0.581000 0.105548 0.988130 -0.109240
-0.582000 0.988326 0.127157 0.080409
-0.583000 0.105542 0.988133 -0.109208
-0.584000 0.988328 0.127117 0.080417
-0.585000 0.105533 0.988136 -0.109177
-0.586000 0.988331 0.127078 0.080420
-0.587000 0.105522 0.988139 -0.109151
-0.588000 0.988335 0.127042 0.080418
-0.589000 0.105510 0.988141 -0.109130
-0.590000 0.988337 0.127012 0.080412
-0.591000 0.105498 0.988143 -0.109117
-0.592000 0.988340 0.126991 0.080405
-0.593000 0.105487 0.988144 -0.109109
-0.594000 0.988341 0.126977 0.080398
-0.595000 0.105477 0.988146 -0.109105
-0.596000 0.988342 0.126968 0.080391
-0.597000 0.105469 0.988146 -0.109103
-0.598000 0.988343 0.126963 0.080386
-0.599000 0.105462 0.988147 -0.109103
-0.600000 0.988344 0.126960 0.080381
-0.601000 0.105457 0.988147 -0.109103
-0.602000 0.988344 0.126959 0.080377
-0.603000 0.105453 0.988148 -0.109104
-0.604000 0.988345 0.126958 0.080374
-0.605000 0.105449 0.988148 -0.109105
-0.606000 0.988345 0.126958 0.080372
-0.607000 0.105446 0.988148 -0.109105
-0.608000 0.988345 0.126957 0.080370
-0.609000 0.105444 0.988148 -0.109106
-0.610000 0.988345 0.126957 0.080368
-0.611000 0.105442 0.988148 -0.109106
-0.612000 0.988345 0.126957 0.080367
-0.613000 0.105441 0.988148 -0.109107
-0.614000 0.988345 0.126957 0.080366
-0.615000 0.105440 0.988148 -0.109107
-0.616000 0.988345 0.126957 0.080365
-0.617000 0.105439 0.988149 -0.109107
-0.618000 0.988345 0.126957 0.080365
-0.619000 0.105438 0.988149 -0.109107
-0.620000 0.988345 0.126957 0.080364
-0.621000 0.105438 0.988149 -0.109107
-0.622000 0.988345 0.126957 0.080364
-0.623000 0.105438 0.988149 -0.109107
-0.624000 0.988345 0.126957 0.080364
-0.625000 0.105437 0.988149 -0.109107
-0.626000 0.988345 0.126957 0.080364
-0.627000 0.105437 0.988149 -0.109107
-0.628000 0.988345 0.126957 0.080364
-0.629000 0.105437 0.988149 -0.109107
-0.630000 0.988345 0.126957 0.080364
-0.631000 0.105437 0.988149 -0.109107
-0.632000 0.988345 0.126957 0.080364
-0.633000 0.105437 0.988149 -0.109107
-0.634000 0.988345 0.126957 0.080364
-0.635000 0.105437 0.988149 -0.109107
-0.636000 0.988345 0.126957 0.080364
-0.637000 0.105437 0.988149 -0.109107
-0.638000 0.988345 0.126957 0.080364
-0.639000 0.105437 0.988149 -0.109107
-0.640000 0.988345 0.126957 0.080364
-0.641000 0.105437 0.988149 -0.109107
-0.642000 0.988345 0.126957 0.080364
-0.643000 0.105437 0.988149 -0.109107
-0.644000 0.988345 0.126957 0.080364
-0.645000 0.105437 0.988149 -0.109107
-0.646000 0.988345 0.126957 0.080364
-0.647000 0.105438 0.988149 -0.109107
-0.648000 0.988345 0.126957 0.080364
-0.649000 0.105438 0.988149 -0.109107
-0.650000 0.988345 0.126957 0.080364
-0.651000 0.105438 0.988149 -0.109107
-0.652000 0.988345 0.126957 0.080364
-0.653000 0.105438 0.988149 -0.109106
-0.654000 0.988345 0.126956 0.080365
-0.655000 0.105438 0.988149 -0.109106
-0.656000 0.988345 0.126956 0.080365
-0.657000 0.105438 0.988149 -0.109106
-0.658000 0.988345 0.126956 0.080365
-0.659000 0.105438 0.988149 -0.109106
-0.660000 0.988345 0.126956 0.080365
-0.661000 0.105438 0.988149 -0.109106
-0.662000 0.988345 0.126956 0.080365
-0.663000 0.105438 0.988149 -0.109106
-0.664000 0.988345 0.126956 0.080365
-0.665000 0.105439 0.988149 -0.109106
-0.666000 0.988345 0.126956 0.080365
-0.667000 0.105439 0.988149 -0.109106
-0.668000 0.988345 0.126956 0.080365
-0.669000 0.105439 0.988149 -0.109106
-0.670000 0.988345 0.126956 0.080366
-0.671000 0.105439 0.988149 -0.109106
-0.672000 0.988345 0.126956 0.080366
-0.673000 0.105439 0.988149 -0.109106
-0.674000 0.988345 0.126956 0.080366
-0.675000 0.105439 0.988149 -0.109105
-0.676000 0.988345 0.126956 0.080366
-0.677000 0.105439 0.988149 -0.109105
-0.678000 0.988345 0.126956 0.080366
-0.679000 0.105439 0.988149 -0.109105
-0.680000 0.988345 0.126956 0.080366
-0.681000 0.105439 0.988149 -0.109105
-0.682000 0.988345 0.126956 0.080366
-0.683000 0.105440 0.988149 -0.109105
-0.684000 0.988345 0.126956 0.080366
-0.685000 0.105440 0.988149 -0.109105
-0.686000 0.988345 0.126956 0.080366
-0.687000 0.105440 0.988149 -0.109105
-0.688000 0.988345 0.126956 0.080367
-0.689000 0.105440 0.988149 -0.109105
-0.690000 0.988345 0.126956 0.080367
-0.691000 0.105440 0.988149 -0.109105
-0.692000 0.988345 0.126956 0.080367
-0.693000 0.105440 0.988149 -0.109105
-0.694000 0.988345 0.126956 0.080367
-0.695000 0.105440 0.988149 -0.109105
-0.696000 0.988345 0.126956 0.080367
-0.697000 0.105440 0.988149 -0.109104
-0.698000 0.988345 0.126956 0.080367
-0.699000 0.105440 0.988149 -0.109104
-0.700000 0.988345 0.126956 0.080367
-0.701000 0.105441 0.988149 -0.109104
-0.702000 0.988345 0.126956 0.080367
-0.703000 0.105441 0.988149 -0.109104
-0.704000 0.988345 0.126955 0.080368
-0.705000 0.105441 0.988149 -0.109104
-0.706000 0.988345 0.126955 0.080368
-0.707000 0.105441 0.988149 -0.109104
-0.708000 0.988345 0.126955 0.080368
-0.709000 0.105441 0.988149 -0.109104
-0.710000 0.988345 0.126955 0.080368
-0.711000 0.105441 0.988149 -0.109104
-0.712000 0.988345 0.126955 0.080368
-0.713000 0.105441 0.988149 -0.109104
-0.714000 0.988345 0.126955 0.080368
-0.715000 0.105441 0.988149 -0.109104
-0.716000 0.988345 0.126955 0.080368
-0.717000 0.105441 0.988149 -0.109104
-0.718000 0.988345 0.126955 0.080368
-0.719000 0.105442 0.988149 -0.109103
-0.720000 0.988345 0.126955 0.080368
-0.721000 0.105442 0.988149 -0.109103
-0.722000 0.988345 0.126955 0.080369
-0.723000 0.105442 0.988149 -0.109103
-0.724000 0.988345 0.126955 0.080369
-0.725000 0.105442 0.988149 -0.109103
-0.726000 0.988345 0.126955 0.080369
-0.727000 0.105442 0.988149 -0.109103
-0.728000 0.988345 0.126955 0.080369
-0.729000 0.105442 0.988149 -0.109103
-0.730000 0.988345 0.126955 0.080369
-0.731000 0.105442 0.988149 -0.109103
-0.732000 0.988345 0.126955 0.080369
-0.733000 0.105442 0.988149 -0.109103
-0.734000 0.988345 0.126955 0.080369
-0.735000 0.105443 0.988149 -0.109103
-0.736000 0.988345 0.126955 0.080369
-0.737000 0.105443 0.988149 -0.109103
-0.738000 0.988345 0.126955 0.080370
-0.739000 0.105443 0.988149 -0.109103
-0.740000 0.988345 0.126955 0.080370
-0.741000 0.105443 0.988149 -0.109102
-0.742000 0.988345 0.126955 0.080370
-0.743000 0.105443 0.988149 -0.109102
-0.744000 0.988345 0.126955 0.080370
-0.745000 0.105443 0.988149 -0.109102
-0.746000 0.988345 0.126955 0.080370
-0.747000 0.105443 0.988149 -0.109102
-0.748000 0.988345 0.126955 0.080370
-0.749000 0.105443 0.988149 -0.109102
-0.750000 0.988345 0.126955 0.080370
-0.751000 0.105443 0.988149 -0.109102
-0.752000 0.988345 0.126955 0.080370
-0.753000 0.105444 0.988149 -0.109102
-0.754000 0.988345 0.126954 0.080371
-0.755000 0.105444 0.988149 -0.109102
-0.756000 0.988345 0.126954 0.080371
-0.757000 0.105444 0.988149 -0.109102
-0.758000 0.988345 0.126954 0.080371
-0.759000 0.105444 0.988149 -0.109102
-0.760000 0.988345 0.126954 0.080371
-0.761000 0.105444 0.988148 -0.109101
-0.762000 0.988345 0.126954 0.080371
-0.763000 0.105444 0.988148 -0.109101
-0.764000 0.988345 0.126954 0.080371
-0.765000 0.105444 0.988148 -0.109101
-0.766000 0.988345 0.126954 0.080371
-0.767000 0.105444 0.988148 -0.109101
-0.768000 0.988345 0.126954 0.080371
-0.769000 0.105445 0.988148 -0.109101
-0.770000 0.988345 0.126954 0.080372
-0.771000 0.105445 0.988148 -0.109101
-0.772000 0.988345 0.126954 0.080372
-0.773000 0.105445 0.988148 -0.109101
-0.774000 0.988345 0.126954 0.080372
-0.775000 0.105445 0.988148 -0.109101
-0.776000 0.988345 0.126954 0.080372
-0.777000 0.105445 0.988148 -0.109101
-0.778000 0.988345 0.126954 0.080372
-0.779000 0.105445 0.988148 -0.109100
-0.780000 0.988345 0.126954 0.080372
-0.781000 0.105445 0.988148 -0.109100
-0.782000 0.988345 0.126954 0.080372
-0.783000 0.105446 0.988148 -0.109100
-0.784000 0.988345 0.126954 0.080373
-0.785000 0.105446 0.988148 -0.109100
-0.786000 0.988345 0.126954 0.080373
-0.787000 0.105446 0.988148 -0.109100
-0.788000 0.988345 0.126954 0.080373
-0.789000 0.105446 0.988148 -0.109100
-0.790000 0.988345 0.126954 0.080373
-0.791000 0.105446 0.988148 -0.109100
-0.792000 0.988345 0.126954 0.080373
-0.793000 0.105446 0.988148 -0.109100
-0.794000 0.988345 0.126953 0.080373
-0.795000 0.105446 0.988148 -0.109099
-0.796000 0.988345 0.126953 0.080374
-0.797000 0.105447 0.988148 -0.109099
-0.798000 0.988345 0.126953 0.080374
-0.799000 0.105447 0.988148 -0.109099
-0.800000 0.988345 0.126953 0.080374
-0.801000 0.105447 0.988148 -0.109099
-0.802000 0.988345 0.126953 0.080374
-0.803000 0.105447 0.988148 -0.109099
-0.804000 0.988345 0.126953 0.080374
-0.805000 0.105447 0.988148 -0.109099
-0.806000 0.988345 0.126953 0.080374
-0.807000 0.105447 0.988148 -0.109099
-0.808000 0.988345 0.126953 0.080375
-0.809000 0.105448 0.988148 -0.109098
-0.810000 0.988345 0.126953 0.080375
-0.811000 0.105448 0.988148 -0.109098
-0.812000 0.988345 0.126953 0.080375
-0.813000 0.105448 0.988148 -0.109098
-0.814000 0.988345 0.126953 0.080375
-0.815000 0.105448 0.988148 -0.109098
-0.816000 0.988345 0.126953 0.080375
-0.817000 0.105448 0.988148 -0.109098
-0.818000 0.988345 0.126953 0.080376
-0.819000 0.105448 0.988148 -0.109098
-0.820000 0.988345 0.126953 0.080376
-0.821000 0.105449 0.988148 -0.109098
-0.822000 0.988345 0.126953 0.080376
-0.823000 0.105449 0.988148 -0.109097
-0.824000 0.988345 0.126952 0.080376
-0.825000 0.105449 0.988148 -0.109097
-0.826000 0.988345 0.126952 0.080376
-0.827000 0.105449 0.988148 -0.109097
-0.828000 0.988345 0.126952 0.080377
-0.829000 0.105449 0.988148 -0.109097
-0.830000 0.988345 0.126952 0.080377
-0.831000 0.105450 0.988148 -0.109097
-0.832000 0.988345 0.126952 0.080377
-0.833000 0.105450 0.988148 -0.109096
-0.834000 0.988345 0.126952 0.080377
-0.835000 0.105450 0.988148 -0.109096
-0.836000 0.988345 0.126952 0.080378
-0.837000 0.105450 0.988148 -0.109096
-0.838000 0.988345 0.126952 0.080378
-0.839000 0.105451 0.988148 -0.109096
-0.840000 0.988345 0.126952 0.080378
-0.841000 0.105451 0.988148 -0.109096
-0.842000 0.988345 0.126952 0.080378
-0.843000 0.105451 0.988148 -0.109095
-0.844000 0.988345 0.126952 0.080379
-0.845000 0.105451 0.988148 -0.109095
-0.846000 0.988345 0.126951 0.080379
-0.847000 0.105452 0.988148 -0.109095
-0.848000 0.988345 0.126951 0.080379
-0.849000 0.105452 0.988148 -0.109095
-0.850000 0.988345 0.126951 0.080379
-0.851000 0.105452 0.988148 -0.109095
-0.852000 0.988345 0.126951 0.080380
-0.853000 0.105452 0.988148 -0.109094
-0.854000 0.988345 0.126951 0.080380
-0.855000 0.105453 0.988148 -0.109094
-0.856000 0.988345 0.126951 0.080380
-0.857000 0.105453 0.988148 -0.109094
-0.858000 0.988345 0.126951 0.080381
-0.859000 0.105453 0.988148 -0.109093
-0.860000 0.988345 0.126951 0.080381
-0.861000 0.105454 0.988148 -0.109093
-0.862000 0.988345 0.126950 0.080381
-0.863000 0.105454 0.988148 -0.109093
-0.864000 0.988345 0.126950 0.080382
-0.865000 0.105454 0.988148 -0.109093
-0.866000 0.988345 0.126950 0.080382
-0.867000 0.105455 0.988148 -0.109092
-0.868000 0.988345 0.126950 0.080383
-0.869000 0.105455 0.988148 -0.109092
-0.870000 0.988345 0.126950 0.080383
-0.871000 0.105455 0.988148 -0.109092
-0.872000 0.988345 0.126950 0.080383
-0.873000 0.105456 0.988148 -0.109091
-0.874000 0.988345 0.126950 0.080384
-0.875000 0.105456 0.988148 -0.109091
-0.876000 0.988345 0.126949 0.080384
-0.877000 0.105457 0.988148 -0.109090
-0.878000 0.988345 0.126949 0.080385
-0.879000 0.105457 0.988148 -0.109090
-0.880000 0.988345 0.126949 0.080385
-0.881000 0.105457 0.988148 -0.109090
-0.882000 0.988344 0.126949 0.080386
-0.883000 0.105458 0.988148 -0.109089
-0.884000 0.988344 0.126949 0.080386
-0.885000 0.105458 0.988148 -0.109089
-0.886000 0.988344 0.126948 0.080387
-0.887000 0.105459 0.988148 -0.109088
-0.888000 0.988344 0.126948 0.080388
-0.889000 0.105459 0.988148 -0.109088
-0.890000 0.988344 0.126948 0.080388
-0.891000 0.105460 0.988148 -0.109087
-0.892000 0.988344 0.126948 0.080389
-0.893000 0.105461 0.988148 -0.109087
-0.894000 0.988344 0.126947 0.080389
-0.895000 0.105461 0.988148 -0.109086
-0.896000 0.988344 0.126947 0.080390
-0.897000 0.105462 0.988148 -0.109085
-0.898000 0.988344 0.126947 0.080391
-0.899000 0.105463 0.988148 -0.109085
-0.900000 0.988344 0.126946 0.080392
-0.901000 0.105463 0.988148 -0.109084
-0.902000 0.988344 0.126946 0.080393
-0.903000 0.105464 0.988148 -0.109083
-0.904000 0.988344 0.126946 0.080394
-0.905000 0.105465 0.988148 -0.109082
-0.906000 0.988344 0.126945 0.080395
-0.907000 0.105466 0.988148 -0.109082
-0.908000 0.988344 0.126945 0.080396
-0.909000 0.105467 0.988148 -0.109081
-0.910000 0.988344 0.126944 0.080397
-0.911000 0.105468 0.988148 -0.109080
-0.912000 0.988344 0.126944 0.080398
-0.913000 0.105469 0.988148 -0.109079
-0.914000 0.988344 0.126943 0.080399
-0.915000 0.105470 0.988148 -0.109077
-0.916000 0.988344 0.126943 0.080400
-0.917000 0.105471 0.988148 -0.109076
-0.918000 0.988344 0.126942 0.080402
-0.919000 0.105472 0.988148 -0.109075
-0.920000 0.988344 0.126941 0.080403
-0.921000 0.105473 0.988148 -0.109074
-0.922000 0.988344 0.126940 0.080405
-0.923000 0.105475 0.988148 -0.109072
-0.924000 0.988344 0.126940 0.080407
-0.925000 0.105476 0.988148 -0.109070
-0.926000 0.988344 0.126939 0.080409
-0.927000 0.105478 0.988148 -0.109068
-0.928000 0.988344 0.126938 0.080411
-0.929000 0.105480 0.988148 -0.109066
-0.930000 0.988344 0.126936 0.080413
-0.931000 0.105482 0.988148 -0.109064
-0.932000 0.988344 0.126935 0.080416
-0.933000 0.105484 0.988148 -0.109062
-0.934000 0.988344 0.126934 0.080418
-0.935000 0.105486 0.988148 -0.109059
-0.936000 0.988343 0.126932 0.080421
-0.937000 0.105488 0.988148 -0.109056
-0.938000 0.988343 0.126930 0.080425
-0.939000 0.105491 0.988148 -0.109052
-0.940000 0.988343 0.126928 0.080428
-0.941000 0.105494 0.988148 -0.109048
-0.942000 0.988343 0.126926 0.080433
-0.943000 0.105497 0.988148 -0.109044
-0.944000 0.988343 0.126923 0.080437
-0.945000 0.105501 0.988148 -0.109039
-0.946000 0.988343 0.126920 0.080443
-0.947000 0.105505 0.988148 -0.109033
-0.948000 0.988343 0.126916 0.080448
-0.949000 0.105509 0.988148 -0.109027
-0.950000 0.988343 0.126912 0.080455
-0.951000 0.105514 0.988149 -0.109019
-0.952000 0.988343 0.126906 0.080463
-0.953000 0.105519 0.988149 -0.109010
-0.954000 0.988343 0.126900 0.080471
-0.955000 0.105525 0.988149 -0.108999
-0.956000 0.988343 0.126892 0.080481
-0.957000 0.105531 0.988149 -0.108987
-0.958000 0.988343 0.126882 0.080493
-0.959000 0.105537 0.988150 -0.108972
-0.960000 0.988343 0.126870 0.080505
-0.961000 0.105544 0.988151 -0.108954
-0.962000 0.988343 0.126855 0.080519
-0.963000 0.105550 0.988152 -0.108933
-0.964000 0.988344 0.126837 0.080535
-0.965000 0.105556 0.988153 -0.108909
-0.966000 0.988344 0.126814 0.080552
-0.967000 0.105561 0.988154 -0.108881
-0.968000 0.988346 0.126785 0.080568
-0.969000 0.105564 0.988156 -0.108850
-0.970000 0.988347 0.126752 0.080584
-0.971000 0.105564 0.988159 -0.108817
-0.972000 0.988350 0.126714 0.080597
-0.973000 0.105560 0.988161 -0.108783
-0.974000 0.988352 0.126674 0.080606
-0.975000 0.105554 0.988164 -0.108753
-0.976000 0.988355 0.126636 0.080609
-0.977000 0.105545 0.988167 -0.108728
-0.978000 0.988358 0.126603 0.080608
-0.979000 0.105536 0.988169 -0.108709
-0.980000 0.988361 0.126577 0.080605
-0.981000 0.105527 0.988170 -0.108696
-0.982000 0.988363 0.126558 0.080600
-0.983000 0.105519 0.988172 -0.108688
-0.984000 0.988364 0.126546 0.080595
-0.985000 0.105512 0.988172 -0.108684
-0.986000 0.988365 0.126539 0.080590
-0.987000 0.105507 0.988173 -0.108682
-0.988000 0.988365 0.126534 0.080587
-0.989000 0.105502 0.988173 -0.108681
-0.990000 0.988366 0.126532 0.080584
-0.991000 0.105499 0.988174 -0.108680
-0.992000 0.988366 0.126530 0.080582
-0.993000 0.105497 0.988174 -0.108680
-0.994000 0.988366 0.126529 0.080581
-0.995000 0.105495 0.988174 -0.108680
-0.996000 0.988366 0.126529 0.080580
-0.997000 0.105494 0.988174 -0.108680
-0.998000 0.988367 0.126528 0.080579
-0.999000 0.105493 0.988174 -0.108680
+0.000000 0.707567 0.707567 0.000001
+0.001000 0.697735 0.712922 -0.069645
+0.002000 0.561675 0.497117 0.642619
+0.003000 -0.098420 0.984608 0.010624
+0.004000 0.901631 0.193118 0.030662
+0.005000 0.098078 0.904291 -0.082762
+0.006000 0.863967 0.193164 0.076509
+0.007000 0.132147 0.894505 -0.096120
+0.008000 0.864481 0.185619 0.073507
+0.009000 0.129871 0.892748 -0.096080
+0.010000 0.865747 0.182639 0.074940
+0.011000 0.128461 0.893415 -0.099446
+0.012000 0.859386 0.183583 0.072419
+0.013000 0.128321 0.885226 -0.093064
+0.014000 0.855942 0.176637 0.074710
+0.015000 0.123846 0.870342 -0.098969
+0.016000 0.862526 0.163818 0.067369
+0.017000 0.123662 0.874229 -0.100063
+0.018000 0.863097 0.163350 0.067409
+0.019000 0.124554 0.873749 -0.099927
+0.020000 0.862075 0.163111 0.067494
+0.021000 0.124827 0.873883 -0.099297
+0.022000 0.862670 0.162814 0.067828
+0.023000 0.125161 0.873932 -0.099339
+0.024000 0.862072 0.162702 0.068013
+0.025000 0.125279 0.873866 -0.098729
+0.026000 0.862771 0.162436 0.068292
+0.027000 0.125555 0.873925 -0.098884
+0.028000 0.862069 0.162373 0.068415
+0.029000 0.125586 0.873854 -0.098289
+0.030000 0.862810 0.162118 0.068675
+0.031000 0.125841 0.873916 -0.098520
+0.032000 0.862075 0.162084 0.068755
+0.033000 0.125840 0.873838 -0.097946
+0.034000 0.862838 0.161857 0.068957
+0.035000 0.126042 0.873911 -0.098213
+0.036000 0.862080 0.161847 0.069002
+0.037000 0.126031 0.873834 -0.097697
+0.038000 0.862838 0.161634 0.069158
+0.039000 0.126179 0.873907 -0.098000
+0.040000 0.862072 0.161642 0.069161
+0.041000 0.126105 0.873838 -0.097483
+0.042000 0.862858 0.161457 0.069281
+0.043000 0.126259 0.873909 -0.097817
+0.044000 0.862078 0.161477 0.069282
+0.045000 0.126174 0.873835 -0.097327
+0.046000 0.862856 0.161303 0.069409
+0.047000 0.126325 0.873909 -0.097668
+0.048000 0.862074 0.161353 0.069395
+0.049000 0.126248 0.873833 -0.097158
+0.050000 0.862870 0.161179 0.069528
+0.051000 0.126416 0.873913 -0.097508
+0.052000 0.862070 0.161217 0.069527
+0.053000 0.126338 0.873841 -0.096985
+0.054000 0.862867 0.161038 0.069686
+0.055000 0.126514 0.873917 -0.097330
+0.056000 0.862069 0.161078 0.069691
+0.057000 0.126434 0.873843 -0.096791
+0.058000 0.862874 0.160884 0.069838
+0.059000 0.126584 0.873919 -0.097097
+0.060000 0.862070 0.160872 0.069854
+0.061000 0.126496 0.873850 -0.096542
+0.062000 0.862889 0.160617 0.069979
+0.063000 0.126606 0.873931 -0.096849
+0.064000 0.862095 0.160577 0.069941
+0.065000 0.126477 0.873860 -0.096329
+0.066000 0.862898 0.160353 0.070004
+0.067000 0.126598 0.873932 -0.096711
+0.068000 0.862092 0.160420 0.069945
+0.069000 0.126477 0.873859 -0.096244
+0.070000 0.862913 0.160263 0.070018
+0.071000 0.126602 0.873937 -0.096655
+0.072000 0.862096 0.160382 0.069976
+0.073000 0.126502 0.873855 -0.096209
+0.074000 0.862898 0.160236 0.070066
+0.075000 0.126631 0.873939 -0.096597
+0.076000 0.862103 0.160315 0.070019
+0.077000 0.126539 0.873862 -0.096153
+0.078000 0.862887 0.160199 0.070112
+0.079000 0.126660 0.873936 -0.096554
+0.080000 0.862092 0.160284 0.070067
+0.081000 0.126559 0.873868 -0.096102
+0.082000 0.862887 0.160151 0.070170
+0.083000 0.126706 0.873936 -0.096487
+0.084000 0.862093 0.160237 0.070130
+0.085000 0.126606 0.873863 -0.096024
+0.086000 0.862901 0.160110 0.070233
+0.087000 0.126764 0.873934 -0.096431
+0.088000 0.862095 0.160192 0.070205
+0.089000 0.126668 0.873862 -0.095958
+0.090000 0.862884 0.160058 0.070309
+0.091000 0.126813 0.873940 -0.096342
+0.092000 0.862088 0.160131 0.070282
+0.093000 0.126750 0.873864 -0.095864
+0.094000 0.862896 0.159986 0.070397
+0.095000 0.126863 0.873943 -0.096242
+0.096000 0.862083 0.160065 0.070398
+0.097000 0.126798 0.873868 -0.095751
+0.098000 0.862889 0.159910 0.070512
+0.099000 0.126955 0.873940 -0.096131
+0.100000 0.862084 0.159977 0.070495
+0.101000 0.126856 0.873871 -0.095627
+0.102000 0.862889 0.159820 0.070621
+0.103000 0.127011 0.873948 -0.095979
+0.104000 0.862088 0.159858 0.070623
+0.105000 0.126935 0.873873 -0.095456
+0.106000 0.862890 0.159674 0.070770
+0.107000 0.127108 0.873954 -0.095783
+0.108000 0.862097 0.159696 0.070789
+0.109000 0.127032 0.873875 -0.095253
+0.110000 0.862892 0.159492 0.070947
+0.111000 0.127172 0.873959 -0.095544
+0.112000 0.862099 0.159482 0.070975
+0.113000 0.127111 0.873892 -0.094977
+0.114000 0.862893 0.159235 0.071149
+0.115000 0.127240 0.873976 -0.095236
+0.116000 0.862095 0.159188 0.071205
+0.117000 0.127169 0.873906 -0.094624
+0.118000 0.862907 0.158888 0.071361
+0.119000 0.127292 0.873992 -0.094866
+0.120000 0.862127 0.158786 0.071368
+0.121000 0.127146 0.873930 -0.094255
+0.122000 0.862928 0.158447 0.071488
+0.123000 0.127249 0.874010 -0.094518
+0.124000 0.862154 0.158360 0.071439
+0.125000 0.127109 0.873940 -0.093979
+0.126000 0.862950 0.158099 0.071519
+0.127000 0.127184 0.874021 -0.094319
+0.128000 0.862162 0.158107 0.071454
+0.129000 0.127055 0.873943 -0.093841
+0.130000 0.862985 0.157925 0.071510
+0.131000 0.127159 0.874020 -0.094247
+0.132000 0.862174 0.157995 0.071444
+0.133000 0.127026 0.873950 -0.093782
+0.134000 0.862983 0.157852 0.071510
+0.135000 0.127137 0.874026 -0.094195
+0.136000 0.862178 0.157932 0.071447
+0.137000 0.127019 0.873957 -0.093757
+0.138000 0.862987 0.157806 0.071499
+0.139000 0.127102 0.874032 -0.094169
+0.140000 0.862186 0.157901 0.071433
+0.141000 0.126994 0.873958 -0.093732
+0.142000 0.862992 0.157783 0.071493
+0.143000 0.127106 0.874034 -0.094166
+0.144000 0.862179 0.157883 0.071436
+0.145000 0.126988 0.873958 -0.093712
+0.146000 0.862996 0.157773 0.071501
+0.147000 0.127096 0.874033 -0.094152
+0.148000 0.862193 0.157867 0.071422
+0.149000 0.126985 0.873956 -0.093728
+0.150000 0.862988 0.157743 0.071486
+0.151000 0.127075 0.874036 -0.094139
+0.152000 0.862189 0.157844 0.071418
+0.153000 0.126957 0.873963 -0.093700
+0.154000 0.862989 0.157738 0.071501
+0.155000 0.127080 0.874036 -0.094128
+0.156000 0.862191 0.157833 0.071434
+0.157000 0.126963 0.873967 -0.093682
+0.158000 0.862989 0.157721 0.071496
+0.159000 0.127085 0.874039 -0.094118
+0.160000 0.862192 0.157823 0.071442
+0.161000 0.126984 0.873960 -0.093698
+0.162000 0.862995 0.157713 0.071494
+0.163000 0.127071 0.874044 -0.094100
+0.164000 0.862184 0.157820 0.071443
+0.165000 0.126958 0.873968 -0.093664
+0.166000 0.862995 0.157689 0.071516
+0.167000 0.127083 0.874042 -0.094099
+0.168000 0.862189 0.157796 0.071440
+0.169000 0.126967 0.873963 -0.093661
+0.170000 0.863001 0.157685 0.071508
+0.171000 0.127067 0.874043 -0.094088
+0.172000 0.862193 0.157787 0.071445
+0.173000 0.126959 0.873967 -0.093643
+0.174000 0.862989 0.157673 0.071516
+0.175000 0.127078 0.874043 -0.094078
+0.176000 0.862191 0.157786 0.071457
+0.177000 0.126982 0.873966 -0.093648
+0.178000 0.862998 0.157664 0.071523
+0.179000 0.127085 0.874042 -0.094071
+0.180000 0.862197 0.157784 0.071456
+0.181000 0.126976 0.873969 -0.093653
+0.182000 0.862982 0.157678 0.071534
+0.183000 0.127099 0.874045 -0.094068
+0.184000 0.862196 0.157779 0.071450
+0.185000 0.126979 0.873971 -0.093630
+0.186000 0.862998 0.157657 0.071519
+0.187000 0.127083 0.874047 -0.094059
+0.188000 0.862185 0.157771 0.071465
+0.189000 0.126964 0.873971 -0.093620
+0.190000 0.862992 0.157662 0.071537
+0.191000 0.127096 0.874043 -0.094056
+0.192000 0.862194 0.157763 0.071465
+0.193000 0.126975 0.873969 -0.093623
+0.194000 0.862992 0.157657 0.071528
+0.195000 0.127095 0.874044 -0.094054
+0.196000 0.862184 0.157762 0.071475
+0.197000 0.126975 0.873967 -0.093614
+0.198000 0.863011 0.157642 0.071521
+0.199000 0.127084 0.874040 -0.094064
+0.200000 0.862192 0.157770 0.071466
+0.201000 0.126956 0.873976 -0.093612
+0.202000 0.862991 0.157638 0.071531
+0.203000 0.127104 0.874048 -0.094045
+0.204000 0.862194 0.157745 0.071465
+0.205000 0.126994 0.873963 -0.093622
+0.206000 0.862997 0.157633 0.071539
+0.207000 0.127093 0.874047 -0.094042
+0.208000 0.862193 0.157753 0.071467
+0.209000 0.126976 0.873967 -0.093621
+0.210000 0.862995 0.157635 0.071534
+0.211000 0.127101 0.874042 -0.094043
+0.212000 0.862194 0.157741 0.071466
+0.213000 0.126959 0.873971 -0.093589
+0.214000 0.863015 0.157637 0.071536
+0.215000 0.127079 0.874045 -0.094045
+0.216000 0.862199 0.157739 0.071459
+0.217000 0.126946 0.873976 -0.093599
+0.218000 0.862994 0.157641 0.071523
+0.219000 0.127087 0.874043 -0.094041
+0.220000 0.862195 0.157736 0.071463
+0.221000 0.126974 0.873971 -0.093613
+0.222000 0.862984 0.157628 0.071535
+0.223000 0.127068 0.874048 -0.094040
+0.224000 0.862189 0.157735 0.071459
+0.225000 0.126967 0.873971 -0.093603
+0.226000 0.862999 0.157615 0.071529
+0.227000 0.127092 0.874044 -0.094041
+0.228000 0.862190 0.157723 0.071458
+0.229000 0.126957 0.873970 -0.093587
+0.230000 0.863015 0.157620 0.071527
+0.231000 0.127074 0.874046 -0.094027
+0.232000 0.862198 0.157740 0.071460
+0.233000 0.126967 0.873968 -0.093613
+0.234000 0.863004 0.157622 0.071512
+0.235000 0.127068 0.874045 -0.094052
+0.236000 0.862201 0.157742 0.071445
+0.237000 0.126957 0.873971 -0.093617
+0.238000 0.862989 0.157638 0.071525
+0.239000 0.127090 0.874044 -0.094041
+0.240000 0.862196 0.157732 0.071459
+0.241000 0.126959 0.873972 -0.093617
+0.242000 0.862994 0.157636 0.071523
+0.243000 0.127067 0.874044 -0.094043
+0.244000 0.862195 0.157749 0.071438
+0.245000 0.126956 0.873970 -0.093630
+0.246000 0.862993 0.157640 0.071518
+0.247000 0.127065 0.874045 -0.094050
+0.248000 0.862193 0.157742 0.071443
+0.249000 0.126939 0.873970 -0.093607
+0.250000 0.863009 0.157632 0.071508
+0.251000 0.127058 0.874045 -0.094041
+0.252000 0.862196 0.157741 0.071447
+0.253000 0.126946 0.873969 -0.093621
+0.254000 0.863003 0.157630 0.071506
+0.255000 0.127071 0.874045 -0.094050
+0.256000 0.862198 0.157732 0.071442
+0.257000 0.126945 0.873971 -0.093612
+0.258000 0.863003 0.157629 0.071501
+0.259000 0.127062 0.874043 -0.094051
+0.260000 0.862192 0.157747 0.071437
+0.261000 0.126938 0.873973 -0.093613
+0.262000 0.863005 0.157626 0.071501
+0.263000 0.127043 0.874050 -0.094046
+0.264000 0.862194 0.157757 0.071436
+0.265000 0.126936 0.873973 -0.093618
+0.266000 0.863000 0.157628 0.071515
+0.267000 0.127073 0.874044 -0.094052
+0.268000 0.862187 0.157749 0.071456
+0.269000 0.126966 0.873968 -0.093604
+0.270000 0.863009 0.157620 0.071517
+0.271000 0.127078 0.874046 -0.094049
+0.272000 0.862187 0.157745 0.071451
+0.273000 0.126962 0.873964 -0.093603
+0.274000 0.863024 0.157619 0.071511
+0.275000 0.127091 0.874041 -0.094051
+0.276000 0.862190 0.157738 0.071467
+0.277000 0.126968 0.873970 -0.093609
+0.278000 0.863005 0.157620 0.071514
+0.279000 0.127076 0.874045 -0.094039
+0.280000 0.862199 0.157743 0.071457
+0.281000 0.126977 0.873972 -0.093612
+0.282000 0.862985 0.157627 0.071530
+0.283000 0.127072 0.874046 -0.094036
+0.284000 0.862200 0.157742 0.071446
+0.285000 0.126951 0.873968 -0.093610
+0.286000 0.863002 0.157627 0.071497
+0.287000 0.127056 0.874046 -0.094045
+0.288000 0.862196 0.157734 0.071446
+0.289000 0.126940 0.873971 -0.093609
+0.290000 0.863001 0.157627 0.071510
+0.291000 0.127061 0.874045 -0.094055
+0.292000 0.862188 0.157735 0.071436
+0.293000 0.126945 0.873968 -0.093625
+0.294000 0.863015 0.157633 0.071498
+0.295000 0.127064 0.874045 -0.094046
+0.296000 0.862200 0.157734 0.071434
+0.297000 0.126939 0.873971 -0.093613
+0.298000 0.862997 0.157631 0.071508
+0.299000 0.127056 0.874050 -0.094031
+0.300000 0.862203 0.157724 0.071448
+0.301000 0.126971 0.873967 -0.093614
+0.302000 0.863005 0.157629 0.071514
+0.303000 0.127063 0.874045 -0.094044
+0.304000 0.862208 0.157730 0.071431
+0.305000 0.126947 0.873970 -0.093612
+0.306000 0.862989 0.157627 0.071519
+0.307000 0.127055 0.874049 -0.094028
+0.308000 0.862194 0.157732 0.071445
+0.309000 0.126969 0.873968 -0.093625
+0.310000 0.863001 0.157624 0.071517
+0.311000 0.127070 0.874046 -0.094049
+0.312000 0.862201 0.157734 0.071438
+0.313000 0.126962 0.873964 -0.093629
+0.314000 0.862999 0.157633 0.071513
+0.315000 0.127050 0.874051 -0.094031
+0.316000 0.862206 0.157740 0.071437
+0.317000 0.126965 0.873970 -0.093633
+0.318000 0.862995 0.157632 0.071508
+0.319000 0.127064 0.874047 -0.094047
+0.320000 0.862198 0.157746 0.071445
+0.321000 0.126944 0.873968 -0.093627
+0.322000 0.863004 0.157642 0.071503
+0.323000 0.127054 0.874045 -0.094053
+0.324000 0.862197 0.157741 0.071442
+0.325000 0.126949 0.873973 -0.093616
+0.326000 0.862993 0.157637 0.071520
+0.327000 0.127075 0.874044 -0.094052
+0.328000 0.862196 0.157735 0.071444
+0.329000 0.126949 0.873970 -0.093618
+0.330000 0.862999 0.157630 0.071530
+0.331000 0.127089 0.874045 -0.094043
+0.332000 0.862201 0.157734 0.071458
+0.333000 0.126967 0.873976 -0.093621
+0.334000 0.862986 0.157639 0.071512
+0.335000 0.127074 0.874047 -0.094045
+0.336000 0.862199 0.157741 0.071464
+0.337000 0.126973 0.873976 -0.093625
+0.338000 0.862978 0.157646 0.071535
+0.339000 0.127079 0.874044 -0.094044
+0.340000 0.862195 0.157741 0.071455
+0.341000 0.126952 0.873974 -0.093599
+0.342000 0.863000 0.157626 0.071534
+0.343000 0.127103 0.874041 -0.094046
+0.344000 0.862198 0.157738 0.071462
+0.345000 0.126987 0.873968 -0.093614
+0.346000 0.863007 0.157632 0.071536
+0.347000 0.127103 0.874047 -0.094041
+0.348000 0.862195 0.157747 0.071467
+0.349000 0.126971 0.873964 -0.093608
+0.350000 0.863002 0.157634 0.071528
+0.351000 0.127073 0.874040 -0.094046
+0.352000 0.862190 0.157750 0.071451
+0.353000 0.126966 0.873967 -0.093608
+0.354000 0.863010 0.157623 0.071521
+0.355000 0.127062 0.874048 -0.094036
+0.356000 0.862199 0.157739 0.071441
+0.357000 0.126955 0.873968 -0.093613
+0.358000 0.863014 0.157629 0.071513
+0.359000 0.127057 0.874048 -0.094046
+0.360000 0.862197 0.157743 0.071451
+0.361000 0.126960 0.873968 -0.093607
+0.362000 0.863019 0.157634 0.071506
+0.363000 0.127069 0.874041 -0.094052
+0.364000 0.862194 0.157745 0.071453
+0.365000 0.126960 0.873967 -0.093621
+0.366000 0.862997 0.157647 0.071515
+0.367000 0.127050 0.874048 -0.094045
+0.368000 0.862194 0.157740 0.071445
+0.369000 0.126950 0.873971 -0.093618
+0.370000 0.863009 0.157624 0.071493
+0.371000 0.127053 0.874043 -0.094045
+0.372000 0.862202 0.157728 0.071444
+0.373000 0.126951 0.873970 -0.093606
+0.374000 0.863005 0.157627 0.071508
+0.375000 0.127056 0.874042 -0.094055
+0.376000 0.862199 0.157737 0.071442
+0.377000 0.126939 0.873972 -0.093624
+0.378000 0.862995 0.157625 0.071492
+0.379000 0.127061 0.874042 -0.094055
+0.380000 0.862195 0.157743 0.071438
+0.381000 0.126931 0.873973 -0.093610
+0.382000 0.863004 0.157621 0.071500
+0.383000 0.127050 0.874050 -0.094052
+0.384000 0.862195 0.157737 0.071437
+0.385000 0.126946 0.873964 -0.093627
+0.386000 0.863009 0.157628 0.071502
+0.387000 0.127060 0.874046 -0.094049
+0.388000 0.862207 0.157745 0.071428
+0.389000 0.126939 0.873968 -0.093630
+0.390000 0.862991 0.157637 0.071505
+0.391000 0.127035 0.874050 -0.094033
+0.392000 0.862201 0.157738 0.071433
+0.393000 0.126951 0.873964 -0.093630
+0.394000 0.862996 0.157633 0.071514
+0.395000 0.127066 0.874048 -0.094037
+0.396000 0.862204 0.157736 0.071451
+0.397000 0.126958 0.873969 -0.093622
+0.398000 0.862993 0.157632 0.071513
+0.399000 0.127063 0.874043 -0.094060
+0.400000 0.862193 0.157752 0.071443
+0.401000 0.126943 0.873972 -0.093622
+0.402000 0.863006 0.157633 0.071499
+0.403000 0.127061 0.874043 -0.094062
+0.404000 0.862202 0.157735 0.071435
+0.405000 0.126941 0.873969 -0.093633
+0.406000 0.862995 0.157651 0.071502
+0.407000 0.127053 0.874044 -0.094063
+0.408000 0.862193 0.157748 0.071438
+0.409000 0.126944 0.873972 -0.093627
+0.410000 0.862992 0.157643 0.071507
+0.411000 0.127052 0.874047 -0.094046
+0.412000 0.862193 0.157751 0.071439
+0.413000 0.126944 0.873972 -0.093621
+0.414000 0.863001 0.157639 0.071504
+0.415000 0.127049 0.874045 -0.094054
+0.416000 0.862200 0.157742 0.071433
+0.417000 0.126938 0.873967 -0.093628
+0.418000 0.863001 0.157639 0.071505
+0.419000 0.127069 0.874045 -0.094058
+0.420000 0.862194 0.157760 0.071442
+0.421000 0.126958 0.873968 -0.093630
+0.422000 0.863001 0.157644 0.071519
+0.423000 0.127076 0.874044 -0.094050
+0.424000 0.862203 0.157757 0.071440
+0.425000 0.126950 0.873971 -0.093610
+0.426000 0.863004 0.157636 0.071510
+0.427000 0.127070 0.874047 -0.094037
+0.428000 0.862194 0.157754 0.071454
+0.429000 0.126964 0.873966 -0.093631
+0.430000 0.863004 0.157637 0.071502
+0.431000 0.127057 0.874049 -0.094034
+0.432000 0.862203 0.157745 0.071447
+0.433000 0.126949 0.873969 -0.093619
+0.434000 0.863001 0.157637 0.071514
+0.435000 0.127067 0.874047 -0.094048
+0.436000 0.862190 0.157739 0.071449
+0.437000 0.126965 0.873970 -0.093627
+0.438000 0.862993 0.157635 0.071527
+0.439000 0.127084 0.874050 -0.094043
+0.440000 0.862196 0.157745 0.071445
+0.441000 0.126947 0.873971 -0.093617
+0.442000 0.863002 0.157639 0.071500
+0.443000 0.127043 0.874045 -0.094056
+0.444000 0.862196 0.157739 0.071440
+0.445000 0.126940 0.873973 -0.093609
+0.446000 0.863001 0.157618 0.071508
+0.447000 0.127069 0.874045 -0.094050
+0.448000 0.862194 0.157734 0.071444
+0.449000 0.126944 0.873970 -0.093613
+0.450000 0.863003 0.157632 0.071516
+0.451000 0.127074 0.874045 -0.094056
+0.452000 0.862197 0.157740 0.071438
+0.453000 0.126952 0.873973 -0.093622
+0.454000 0.862991 0.157615 0.071504
+0.455000 0.127073 0.874043 -0.094045
+0.456000 0.862195 0.157739 0.071447
+0.457000 0.126947 0.873967 -0.093613
+0.458000 0.862999 0.157619 0.071516
+0.459000 0.127055 0.874043 -0.094047
+0.460000 0.862199 0.157744 0.071440
+0.461000 0.126938 0.873970 -0.093631
+0.462000 0.862995 0.157634 0.071496
+0.463000 0.127056 0.874043 -0.094058
+0.464000 0.862201 0.157738 0.071436
+0.465000 0.126960 0.873969 -0.093628
+0.466000 0.862990 0.157628 0.071511
+0.467000 0.127063 0.874041 -0.094050
+0.468000 0.862194 0.157743 0.071440
+0.469000 0.126933 0.873968 -0.093608
+0.470000 0.863019 0.157627 0.071504
+0.471000 0.127057 0.874045 -0.094041
+0.472000 0.862199 0.157735 0.071459
+0.473000 0.126966 0.873970 -0.093624
+0.474000 0.862998 0.157632 0.071509
+0.475000 0.127086 0.874042 -0.094048
+0.476000 0.862195 0.157744 0.071458
+0.477000 0.126972 0.873971 -0.093619
+0.478000 0.862994 0.157627 0.071513
+0.479000 0.127082 0.874038 -0.094058
+0.480000 0.862198 0.157752 0.071458
+0.481000 0.126982 0.873967 -0.093629
+0.482000 0.862986 0.157639 0.071523
+0.483000 0.127070 0.874048 -0.094039
+0.484000 0.862192 0.157745 0.071453
+0.485000 0.126962 0.873970 -0.093620
+0.486000 0.862999 0.157623 0.071512
+0.487000 0.127071 0.874049 -0.094050
+0.488000 0.862196 0.157737 0.071439
+0.489000 0.126954 0.873970 -0.093623
+0.490000 0.863002 0.157629 0.071512
+0.491000 0.127058 0.874048 -0.094046
+0.492000 0.862206 0.157743 0.071431
+0.493000 0.126941 0.873970 -0.093630
+0.494000 0.862987 0.157637 0.071508
+0.495000 0.127066 0.874049 -0.094043
+0.496000 0.862195 0.157743 0.071450
+0.497000 0.126946 0.873972 -0.093615
+0.498000 0.862996 0.157632 0.071506
+0.499000 0.127048 0.874053 -0.094047
+0.500000 0.862195 0.157754 0.071444
+0.501000 0.126953 0.873972 -0.093621
+0.502000 0.863000 0.157631 0.071514
+0.503000 0.127083 0.874044 -0.094049
+0.504000 0.862198 0.157734 0.071450
+0.505000 0.126982 0.873969 -0.093626
+0.506000 0.862998 0.157616 0.071513
+0.507000 0.127072 0.874046 -0.094039
+0.508000 0.862198 0.157740 0.071452
+0.509000 0.126944 0.873973 -0.093608
+0.510000 0.863004 0.157623 0.071524
+0.511000 0.127076 0.874046 -0.094028
+0.512000 0.862201 0.157730 0.071452
+0.513000 0.126959 0.873966 -0.093608
+0.514000 0.863006 0.157623 0.071523
+0.515000 0.127067 0.874044 -0.094044
+0.516000 0.862193 0.157731 0.071440
+0.517000 0.126945 0.873971 -0.093614
+0.518000 0.862999 0.157630 0.071509
+0.519000 0.127088 0.874046 -0.094054
+0.520000 0.862201 0.157742 0.071440
+0.521000 0.126951 0.873969 -0.093627
+0.522000 0.862989 0.157629 0.071509
+0.523000 0.127063 0.874045 -0.094045
+0.524000 0.862196 0.157741 0.071447
+0.525000 0.126951 0.873972 -0.093628
+0.526000 0.863002 0.157627 0.071492
+0.527000 0.127048 0.874046 -0.094049
+0.528000 0.862200 0.157743 0.071432
+0.529000 0.126950 0.873971 -0.093627
+0.530000 0.862999 0.157622 0.071505
+0.531000 0.127060 0.874046 -0.094043
+0.532000 0.862197 0.157741 0.071441
+0.533000 0.126950 0.873970 -0.093618
+0.534000 0.863003 0.157623 0.071500
+0.535000 0.127069 0.874041 -0.094059
+0.536000 0.862192 0.157741 0.071440
+0.537000 0.126961 0.873972 -0.093626
+0.538000 0.862996 0.157633 0.071513
+0.539000 0.127086 0.874043 -0.094056
+0.540000 0.862198 0.157741 0.071440
+0.541000 0.126960 0.873966 -0.093621
+0.542000 0.863007 0.157635 0.071516
+0.543000 0.127074 0.874042 -0.094055
+0.544000 0.862202 0.157735 0.071434
+0.545000 0.126945 0.873972 -0.093607
+0.546000 0.862999 0.157631 0.071510
+0.547000 0.127092 0.874042 -0.094051
+0.548000 0.862193 0.157746 0.071449
+0.549000 0.126959 0.873969 -0.093620
+0.550000 0.862997 0.157637 0.071514
+0.551000 0.127072 0.874041 -0.094070
+0.552000 0.862201 0.157742 0.071442
+0.553000 0.126935 0.873971 -0.093619
+0.554000 0.863003 0.157640 0.071506
+0.555000 0.127052 0.874042 -0.094065
+0.556000 0.862205 0.157748 0.071433
+0.557000 0.126948 0.873974 -0.093627
+0.558000 0.862984 0.157641 0.071520
+0.559000 0.127061 0.874048 -0.094050
+0.560000 0.862193 0.157756 0.071446
+0.561000 0.126946 0.873965 -0.093623
+0.562000 0.863022 0.157638 0.071494
+0.563000 0.127059 0.874045 -0.094059
+0.564000 0.862205 0.157739 0.071429
+0.565000 0.126952 0.873970 -0.093625
+0.566000 0.862996 0.157630 0.071504
+0.567000 0.127052 0.874048 -0.094053
+0.568000 0.862205 0.157736 0.071437
+0.569000 0.126940 0.873973 -0.093618
+0.570000 0.863002 0.157638 0.071505
+0.571000 0.127052 0.874043 -0.094057
+0.572000 0.862200 0.157734 0.071438
+0.573000 0.126948 0.873973 -0.093617
+0.574000 0.863001 0.157633 0.071506
+0.575000 0.127060 0.874045 -0.094046
+0.576000 0.862202 0.157729 0.071431
+0.577000 0.126928 0.873972 -0.093616
+0.578000 0.862999 0.157620 0.071493
+0.579000 0.127030 0.874050 -0.094044
+0.580000 0.862190 0.157734 0.071437
+0.581000 0.126917 0.873978 -0.093602
+0.582000 0.863001 0.157631 0.071509
+0.583000 0.127061 0.874047 -0.094049
+0.584000 0.862200 0.157747 0.071439
+0.585000 0.126940 0.873973 -0.093623
+0.586000 0.862995 0.157629 0.071505
+0.587000 0.127055 0.874043 -0.094057
+0.588000 0.862199 0.157737 0.071436
+0.589000 0.126931 0.873973 -0.093623
+0.590000 0.862996 0.157632 0.071503
+0.591000 0.127056 0.874043 -0.094068
+0.592000 0.862192 0.157749 0.071420
+0.593000 0.126925 0.873969 -0.093616
+0.594000 0.863025 0.157625 0.071494
+0.595000 0.127048 0.874046 -0.094044
+0.596000 0.862204 0.157743 0.071440
+0.597000 0.126953 0.873969 -0.093615
+0.598000 0.862998 0.157631 0.071519
+0.599000 0.127075 0.874045 -0.094041
+0.600000 0.862194 0.157740 0.071454
+0.601000 0.126974 0.873971 -0.093617
+0.602000 0.863002 0.157618 0.071524
+0.603000 0.127070 0.874049 -0.094035
+0.604000 0.862199 0.157743 0.071445
+0.605000 0.126944 0.873968 -0.093614
+0.606000 0.863003 0.157622 0.071513
+0.607000 0.127072 0.874046 -0.094053
+0.608000 0.862191 0.157749 0.071439
+0.609000 0.126928 0.873976 -0.093607
+0.610000 0.862993 0.157629 0.071513
+0.611000 0.127065 0.874046 -0.094062
+0.612000 0.862179 0.157747 0.071440
+0.613000 0.126935 0.873972 -0.093608
+0.614000 0.863015 0.157624 0.071515
+0.615000 0.127057 0.874049 -0.094036
+0.616000 0.862198 0.157733 0.071438
+0.617000 0.126943 0.873972 -0.093614
+0.618000 0.862996 0.157628 0.071515
+0.619000 0.127073 0.874049 -0.094041
+0.620000 0.862197 0.157743 0.071439
+0.621000 0.126959 0.873968 -0.093620
+0.622000 0.862999 0.157632 0.071518
+0.623000 0.127072 0.874044 -0.094052
+0.624000 0.862199 0.157739 0.071438
+0.625000 0.126952 0.873967 -0.093614
+0.626000 0.863009 0.157633 0.071508
+0.627000 0.127061 0.874044 -0.094047
+0.628000 0.862203 0.157735 0.071437
+0.629000 0.126958 0.873968 -0.093633
+0.630000 0.862990 0.157637 0.071506
+0.631000 0.127070 0.874043 -0.094062
+0.632000 0.862198 0.157739 0.071437
+0.633000 0.126941 0.873971 -0.093623
+0.634000 0.862995 0.157627 0.071511
+0.635000 0.127059 0.874043 -0.094052
+0.636000 0.862201 0.157744 0.071442
+0.637000 0.126950 0.873972 -0.093616
+0.638000 0.862992 0.157633 0.071521
+0.639000 0.127067 0.874043 -0.094047
+0.640000 0.862195 0.157748 0.071450
+0.641000 0.126958 0.873966 -0.093629
+0.642000 0.862993 0.157636 0.071513
+0.643000 0.127056 0.874049 -0.094049
+0.644000 0.862194 0.157742 0.071439
+0.645000 0.126947 0.873971 -0.093621
+0.646000 0.863005 0.157631 0.071509
+0.647000 0.127061 0.874042 -0.094054
+0.648000 0.862195 0.157743 0.071442
+0.649000 0.126964 0.873969 -0.093632
+0.650000 0.863007 0.157639 0.071504
+0.651000 0.127069 0.874046 -0.094056
+0.652000 0.862192 0.157752 0.071447
+0.653000 0.126944 0.873970 -0.093612
+0.654000 0.863005 0.157625 0.071510
+0.655000 0.127064 0.874047 -0.094051
+0.656000 0.862194 0.157748 0.071437
+0.657000 0.126947 0.873972 -0.093624
+0.658000 0.862997 0.157645 0.071500
+0.659000 0.127042 0.874049 -0.094055
+0.660000 0.862199 0.157749 0.071437
+0.661000 0.126942 0.873974 -0.093638
+0.662000 0.862992 0.157633 0.071492
+0.663000 0.127054 0.874050 -0.094047
+0.664000 0.862193 0.157737 0.071444
+0.665000 0.126948 0.873970 -0.093621
+0.666000 0.863012 0.157623 0.071508
+0.667000 0.127067 0.874045 -0.094053
+0.668000 0.862196 0.157737 0.071442
+0.669000 0.126958 0.873969 -0.093611
+0.670000 0.863000 0.157625 0.071510
+0.671000 0.127061 0.874052 -0.094037
+0.672000 0.862194 0.157744 0.071452
+0.673000 0.126960 0.873967 -0.093624
+0.674000 0.863001 0.157624 0.071517
+0.675000 0.127071 0.874046 -0.094038
+0.676000 0.862200 0.157743 0.071468
+0.677000 0.126965 0.873972 -0.093608
+0.678000 0.863006 0.157620 0.071516
+0.679000 0.127091 0.874040 -0.094046
+0.680000 0.862192 0.157742 0.071456
+0.681000 0.126971 0.873965 -0.093620
+0.682000 0.862999 0.157639 0.071522
+0.683000 0.127080 0.874044 -0.094055
+0.684000 0.862186 0.157749 0.071449
+0.685000 0.126969 0.873964 -0.093616
+0.686000 0.863015 0.157641 0.071516
+0.687000 0.127070 0.874041 -0.094058
+0.688000 0.862198 0.157749 0.071444
+0.689000 0.126959 0.873966 -0.093639
+0.690000 0.862996 0.157638 0.071518
+0.691000 0.127072 0.874047 -0.094046
+0.692000 0.862196 0.157740 0.071446
+0.693000 0.126949 0.873967 -0.093622
+0.694000 0.863007 0.157622 0.071512
+0.695000 0.127063 0.874046 -0.094035
+0.696000 0.862196 0.157739 0.071452
+0.697000 0.126966 0.873965 -0.093628
+0.698000 0.862996 0.157606 0.071512
+0.699000 0.127089 0.874047 -0.094049
+0.700000 0.862196 0.157725 0.071460
+0.701000 0.126973 0.873973 -0.093599
+0.702000 0.862995 0.157604 0.071537
+0.703000 0.127085 0.874041 -0.094035
+0.704000 0.862194 0.157720 0.071459
+0.705000 0.126977 0.873967 -0.093605
+0.706000 0.862992 0.157617 0.071536
+0.707000 0.127085 0.874045 -0.094029
+0.708000 0.862199 0.157721 0.071459
+0.709000 0.126978 0.873970 -0.093614
+0.710000 0.862989 0.157620 0.071534
+0.711000 0.127085 0.874049 -0.094032
+0.712000 0.862195 0.157739 0.071466
+0.713000 0.126958 0.873968 -0.093608
+0.714000 0.862999 0.157621 0.071515
+0.715000 0.127063 0.874048 -0.094031
+0.716000 0.862200 0.157733 0.071454
+0.717000 0.126968 0.873971 -0.093614
+0.718000 0.862995 0.157622 0.071516
+0.719000 0.127076 0.874043 -0.094059
+0.720000 0.862204 0.157738 0.071441
+0.721000 0.126950 0.873972 -0.093629
+0.722000 0.863002 0.157637 0.071510
+0.723000 0.127056 0.874047 -0.094052
+0.724000 0.862204 0.157743 0.071436
+0.725000 0.126942 0.873969 -0.093627
+0.726000 0.862994 0.157639 0.071502
+0.727000 0.127057 0.874046 -0.094049
+0.728000 0.862199 0.157730 0.071436
+0.729000 0.126943 0.873970 -0.093608
+0.730000 0.863015 0.157614 0.071509
+0.731000 0.127074 0.874042 -0.094041
+0.732000 0.862198 0.157744 0.071451
+0.733000 0.126953 0.873970 -0.093614
+0.734000 0.863005 0.157631 0.071515
+0.735000 0.127064 0.874041 -0.094050
+0.736000 0.862202 0.157753 0.071443
+0.737000 0.126939 0.873971 -0.093619
+0.738000 0.862997 0.157617 0.071510
+0.739000 0.127065 0.874046 -0.094048
+0.740000 0.862192 0.157733 0.071444
+0.741000 0.126950 0.873972 -0.093612
+0.742000 0.863006 0.157616 0.071508
+0.743000 0.127082 0.874042 -0.094039
+0.744000 0.862201 0.157733 0.071446
+0.745000 0.126961 0.873967 -0.093624
+0.746000 0.862997 0.157618 0.071511
+0.747000 0.127060 0.874049 -0.094035
+0.748000 0.862207 0.157729 0.071442
+0.749000 0.126951 0.873974 -0.093624
+0.750000 0.862978 0.157631 0.071522
+0.751000 0.127083 0.874046 -0.094038
+0.752000 0.862197 0.157738 0.071452
+0.753000 0.126974 0.873969 -0.093627
+0.754000 0.863004 0.157620 0.071506
+0.755000 0.127070 0.874044 -0.094045
+0.756000 0.862203 0.157749 0.071449
+0.757000 0.126956 0.873972 -0.093623
+0.758000 0.862996 0.157634 0.071506
+0.759000 0.127077 0.874044 -0.094047
+0.760000 0.862198 0.157735 0.071452
+0.761000 0.126970 0.873969 -0.093615
+0.762000 0.863007 0.157634 0.071509
+0.763000 0.127073 0.874042 -0.094052
+0.764000 0.862199 0.157749 0.071440
+0.765000 0.126939 0.873973 -0.093618
+0.766000 0.862997 0.157637 0.071518
+0.767000 0.127079 0.874043 -0.094049
+0.768000 0.862193 0.157741 0.071450
+0.769000 0.126957 0.873967 -0.093610
+0.770000 0.863007 0.157627 0.071506
+0.771000 0.127075 0.874043 -0.094053
+0.772000 0.862196 0.157740 0.071441
+0.773000 0.126942 0.873969 -0.093610
+0.774000 0.862997 0.157619 0.071522
+0.775000 0.127083 0.874042 -0.094054
+0.776000 0.862190 0.157741 0.071455
+0.777000 0.126968 0.873966 -0.093610
+0.778000 0.863007 0.157631 0.071525
+0.779000 0.127106 0.874044 -0.094052
+0.780000 0.862193 0.157750 0.071459
+0.781000 0.126966 0.873969 -0.093626
+0.782000 0.863004 0.157638 0.071508
+0.783000 0.127046 0.874044 -0.094047
+0.784000 0.862202 0.157750 0.071446
+0.785000 0.126953 0.873970 -0.093620
+0.786000 0.862989 0.157631 0.071506
+0.787000 0.127067 0.874049 -0.094050
+0.788000 0.862186 0.157747 0.071447
+0.789000 0.126949 0.873970 -0.093614
+0.790000 0.863006 0.157624 0.071502
+0.791000 0.127058 0.874047 -0.094048
+0.792000 0.862187 0.157745 0.071455
+0.793000 0.126956 0.873970 -0.093614
+0.794000 0.863002 0.157622 0.071506
+0.795000 0.127072 0.874045 -0.094042
+0.796000 0.862187 0.157742 0.071457
+0.797000 0.126957 0.873970 -0.093615
+0.798000 0.863002 0.157627 0.071519
+0.799000 0.127071 0.874048 -0.094046
+0.800000 0.862194 0.157748 0.071445
+0.801000 0.126954 0.873970 -0.093605
+0.802000 0.863000 0.157623 0.071518
+0.803000 0.127073 0.874046 -0.094039
+0.804000 0.862200 0.157728 0.071453
+0.805000 0.126943 0.873972 -0.093605
+0.806000 0.862993 0.157625 0.071518
+0.807000 0.127089 0.874046 -0.094048
+0.808000 0.862190 0.157743 0.071453
+0.809000 0.126961 0.873967 -0.093609
+0.810000 0.863007 0.157637 0.071513
+0.811000 0.127064 0.874044 -0.094058
+0.812000 0.862190 0.157751 0.071444
+0.813000 0.126950 0.873978 -0.093619
+0.814000 0.862984 0.157639 0.071511
+0.815000 0.127068 0.874049 -0.094054
+0.816000 0.862198 0.157752 0.071447
+0.817000 0.126948 0.873974 -0.093621
+0.818000 0.863002 0.157636 0.071504
+0.819000 0.127062 0.874047 -0.094047
+0.820000 0.862198 0.157740 0.071434
+0.821000 0.126958 0.873969 -0.093625
+0.822000 0.863000 0.157627 0.071522
+0.823000 0.127084 0.874046 -0.094047
+0.824000 0.862192 0.157733 0.071457
+0.825000 0.126974 0.873969 -0.093612
+0.826000 0.863002 0.157628 0.071516
+0.827000 0.127085 0.874045 -0.094062
+0.828000 0.862195 0.157745 0.071445
+0.829000 0.126958 0.873971 -0.093626
+0.830000 0.862992 0.157630 0.071517
+0.831000 0.127077 0.874045 -0.094052
+0.832000 0.862191 0.157739 0.071444
+0.833000 0.126951 0.873968 -0.093613
+0.834000 0.863010 0.157624 0.071505
+0.835000 0.127067 0.874046 -0.094050
+0.836000 0.862203 0.157745 0.071444
+0.837000 0.126954 0.873968 -0.093635
+0.838000 0.862991 0.157633 0.071499
+0.839000 0.127061 0.874047 -0.094060
+0.840000 0.862199 0.157746 0.071427
+0.841000 0.126931 0.873972 -0.093622
+0.842000 0.862996 0.157629 0.071509
+0.843000 0.127068 0.874041 -0.094060
+0.844000 0.862198 0.157743 0.071426
+0.845000 0.126945 0.873969 -0.093629
+0.846000 0.863001 0.157625 0.071507
+0.847000 0.127043 0.874048 -0.094042
+0.848000 0.862195 0.157736 0.071434
+0.849000 0.126944 0.873971 -0.093628
+0.850000 0.862993 0.157643 0.071496
+0.851000 0.127041 0.874051 -0.094043
+0.852000 0.862195 0.157746 0.071440
+0.853000 0.126928 0.873976 -0.093607
+0.854000 0.862997 0.157625 0.071506
+0.855000 0.127060 0.874043 -0.094041
+0.856000 0.862197 0.157732 0.071434
+0.857000 0.126940 0.873971 -0.093613
+0.858000 0.862999 0.157623 0.071511
+0.859000 0.127059 0.874047 -0.094042
+0.860000 0.862198 0.157742 0.071443
+0.861000 0.126944 0.873969 -0.093625
+0.862000 0.862992 0.157637 0.071503
+0.863000 0.127059 0.874043 -0.094068
+0.864000 0.862197 0.157736 0.071420
+0.865000 0.126930 0.873973 -0.093633
+0.866000 0.862995 0.157642 0.071502
+0.867000 0.127047 0.874046 -0.094064
+0.868000 0.862192 0.157758 0.071439
+0.869000 0.126940 0.873974 -0.093622
+0.870000 0.862997 0.157640 0.071501
+0.871000 0.127063 0.874044 -0.094063
+0.872000 0.862194 0.157747 0.071435
+0.873000 0.126935 0.873974 -0.093625
+0.874000 0.863000 0.157630 0.071495
+0.875000 0.127061 0.874044 -0.094057
+0.876000 0.862197 0.157740 0.071433
+0.877000 0.126933 0.873969 -0.093626
+0.878000 0.862993 0.157619 0.071509
+0.879000 0.127070 0.874043 -0.094052
+0.880000 0.862197 0.157748 0.071445
+0.881000 0.126949 0.873971 -0.093626
+0.882000 0.862997 0.157642 0.071515
+0.883000 0.127080 0.874045 -0.094045
+0.884000 0.862197 0.157741 0.071461
+0.885000 0.126967 0.873969 -0.093617
+0.886000 0.862994 0.157623 0.071515
+0.887000 0.127054 0.874048 -0.094041
+0.888000 0.862200 0.157726 0.071445
+0.889000 0.126956 0.873974 -0.093606
+0.890000 0.863000 0.157624 0.071519
+0.891000 0.127084 0.874045 -0.094049
+0.892000 0.862193 0.157737 0.071452
+0.893000 0.126955 0.873967 -0.093605
+0.894000 0.863007 0.157629 0.071523
+0.895000 0.127071 0.874045 -0.094038
+0.896000 0.862199 0.157744 0.071449
+0.897000 0.126962 0.873967 -0.093617
+0.898000 0.863002 0.157627 0.071516
+0.899000 0.127082 0.874042 -0.094060
+0.900000 0.862197 0.157757 0.071441
+0.901000 0.126932 0.873972 -0.093617
+0.902000 0.863000 0.157637 0.071495
+0.903000 0.127047 0.874048 -0.094061
+0.904000 0.862191 0.157744 0.071435
+0.905000 0.126949 0.873973 -0.093630
+0.906000 0.862994 0.157625 0.071504
+0.907000 0.127051 0.874044 -0.094043
+0.908000 0.862193 0.157740 0.071443
+0.909000 0.126949 0.873969 -0.093623
+0.910000 0.863003 0.157634 0.071512
+0.911000 0.127051 0.874046 -0.094050
+0.912000 0.862197 0.157741 0.071433
+0.913000 0.126919 0.873975 -0.093617
+0.914000 0.862994 0.157626 0.071503
+0.915000 0.127053 0.874047 -0.094042
+0.916000 0.862197 0.157744 0.071441
+0.917000 0.126948 0.873971 -0.093619
+0.918000 0.862996 0.157638 0.071513
+0.919000 0.127057 0.874048 -0.094041
+0.920000 0.862197 0.157732 0.071448
+0.921000 0.126955 0.873972 -0.093620
+0.922000 0.862993 0.157628 0.071512
+0.923000 0.127065 0.874046 -0.094046
+0.924000 0.862199 0.157747 0.071440
+0.925000 0.126944 0.873972 -0.093620
+0.926000 0.862987 0.157642 0.071520
+0.927000 0.127055 0.874045 -0.094051
+0.928000 0.862201 0.157752 0.071430
+0.929000 0.126937 0.873972 -0.093630
+0.930000 0.862996 0.157660 0.071498
+0.931000 0.127060 0.874044 -0.094066
+0.932000 0.862195 0.157766 0.071435
+0.933000 0.126946 0.873972 -0.093643
+0.934000 0.862991 0.157646 0.071504
+0.935000 0.127044 0.874047 -0.094052
+0.936000 0.862199 0.157755 0.071442
+0.937000 0.126931 0.873976 -0.093621
+0.938000 0.862994 0.157635 0.071502
+0.939000 0.127066 0.874048 -0.094064
+0.940000 0.862189 0.157753 0.071436
+0.941000 0.126943 0.873976 -0.093620
+0.942000 0.862986 0.157637 0.071519
+0.943000 0.127065 0.874051 -0.094050
+0.944000 0.862194 0.157751 0.071432
+0.945000 0.126949 0.873970 -0.093618
+0.946000 0.863003 0.157632 0.071516
+0.947000 0.127078 0.874048 -0.094053
+0.948000 0.862195 0.157738 0.071443
+0.949000 0.126963 0.873968 -0.093620
+0.950000 0.862999 0.157629 0.071508
+0.951000 0.127056 0.874047 -0.094037
+0.952000 0.862198 0.157725 0.071450
+0.953000 0.126956 0.873971 -0.093622
+0.954000 0.862995 0.157623 0.071503
+0.955000 0.127060 0.874046 -0.094038
+0.956000 0.862205 0.157719 0.071437
+0.957000 0.126954 0.873972 -0.093617
+0.958000 0.862993 0.157627 0.071515
+0.959000 0.127065 0.874050 -0.094043
+0.960000 0.862198 0.157738 0.071448
+0.961000 0.126969 0.873972 -0.093616
+0.962000 0.862991 0.157642 0.071530
+0.963000 0.127080 0.874043 -0.094047
+0.964000 0.862193 0.157740 0.071449
+0.965000 0.126942 0.873973 -0.093603
+0.966000 0.863006 0.157634 0.071514
+0.967000 0.127075 0.874046 -0.094048
+0.968000 0.862195 0.157746 0.071455
+0.969000 0.126948 0.873971 -0.093626
+0.970000 0.862982 0.157644 0.071518
+0.971000 0.127082 0.874043 -0.094051
+0.972000 0.862193 0.157752 0.071452
+0.973000 0.126968 0.873970 -0.093627
+0.974000 0.862995 0.157634 0.071508
+0.975000 0.127060 0.874047 -0.094036
+0.976000 0.862205 0.157736 0.071443
+0.977000 0.126958 0.873970 -0.093630
+0.978000 0.862985 0.157648 0.071518
+0.979000 0.127068 0.874044 -0.094050
+0.980000 0.862203 0.157739 0.071431
+0.981000 0.126944 0.873969 -0.093635
+0.982000 0.862990 0.157632 0.071497
+0.983000 0.127041 0.874051 -0.094047
+0.984000 0.862192 0.157750 0.071434
+0.985000 0.126941 0.873973 -0.093629
+0.986000 0.863003 0.157641 0.071488
+0.987000 0.127058 0.874048 -0.094064
+0.988000 0.862190 0.157754 0.071432
+0.989000 0.126932 0.873975 -0.093631
+0.990000 0.863006 0.157621 0.071477
+0.991000 0.127052 0.874046 -0.094056
+0.992000 0.862206 0.157735 0.071431
+0.993000 0.126929 0.873971 -0.093618
+0.994000 0.862997 0.157628 0.071499
+0.995000 0.127066 0.874045 -0.094044
+0.996000 0.862198 0.157736 0.071440
+0.997000 0.126942 0.873976 -0.093613
+0.998000 0.862987 0.157632 0.071513
+0.999000 0.127057 0.874046 -0.094047
Index: get_magnetization.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- get_magnetization.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ get_magnetization.py	(date 1605493116198)
@@ -1,44 +1,55 @@
+from constant import system_size
 import numpy as np
 
 
-def mean_x(magnetization):
+class GetMagnetization:
     """
-    compute the mean of magnetization in the x direction
+    get the magnetization in x, y and z direction from the 3D system
+    """
+
+    def __init__(self, magnetization):
+        """
+        @type magnetization: object
+        """
+        self.magnetization = magnetization
+
+
+    def mean_x(self):
+        """
+        compute the mean of magnetization in the x direction
 
-    @type magnetization: object
-    """
-    return np.mean(magnetization[:, :, :, 0])
+        @type magnetization: object
+        """
+        return np.mean(self.magnetization[:, :, :, 0])
 
 
-# <m_y>
-def mean_y(magnetization):
-    """
-    compute the mean of magnetization in the y direction
+    def mean_y(self):
+        """
+        compute the mean of magnetization in the y direction
 
-    @type magnetization: object
-    """
-    return np.mean(magnetization[:, :, :, 1])
+        @type magnetization: object
+        """
+        return np.mean(self.magnetization[:, :, :, 1])
 
 
-# <m_z>
-def mean_z(magnetization):
-    """
-    compute the mean of magnetization in the z direction
+    def mean_z(self):
+        """
+        compute the mean of magnetization in the z direction
 
-    @type magnetization: object
-    """
-    return np.mean(magnetization[:, :, :, 2])
+        @type magnetization: object
+        """
+        return np.mean(self.magnetization[:, :, :, 2])
 
 
-def mean_magnetization(magnetization):
-    """
-    compute the mean of magnetization in the x, y and z direction
+    def mean_magnetization(self):
+        """
+        compute the mean of magnetization in the x, y and z direction
 
-    @type magnetization: object
-    """
-    m_1 = mean_x(magnetization)
-    m_2 = mean_y(magnetization)
-    m_3 = mean_z(magnetization)
-    mean_m = np.sqrt(m_1 * m_1 + m_2 * m_2 + m_3 * m_3)
+        @type magnetization: object
+        """
+        m_1 = self.mean_x(self.magnetization)
+        m_2 = self.mean_y(self.magnetization)
+        m_3 = self.mean_z(self.magnetization)
+        mean_m = np.sqrt(m_1 * m_1 + m_2 * m_2 + m_3 * m_3)
 
-    return mean_m
\ No newline at end of file
+        return mean_m
\ No newline at end of file
Index: dmi_interaction.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- dmi_interaction.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ dmi_interaction.py	(date 1605403377181)
@@ -1,8 +1,8 @@
 import numpy as np
 from demag_tensor import f_n_demag, m_pad
 from constant import system_size, mesh, saturation_magnetization, exchange_coeff, mu0, constant_fiend, Mpd3fe, anisotropy_coeff_ku_1, anisotropy_coeff_ku_2
-from initialize_system import rand_vec, r_xy
-from initialize_system import gen_rand_vecs
+from initialize_system import InitializeSystem
+
 
 
 
Index: initialize_system.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- initialize_system.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ initialize_system.py	(date 1605403815868)
@@ -3,33 +3,64 @@
 from constant import system_size, mesh
 
 
-# define random unit vectors
-def gen_rand_vecs(dims, number):
+class InitializeSystem:
     """
-    :param dims: dimension of the vector
-    :type number: number of vectors
+    we assume the initial magnetization in the 3D system is a random state
+    we initialize the 3D system by setting the the magnetization randomly distributed
     """
-    vecs = np.random.normal(size = (number, dims))
+
+    def __init__(self, dims, number):
+        """
+        @type dims: the dims of the random vector
+        @type number: the number of random vectors
+        """
+        self.dims = dims
+        self.number = number
+
+
+    def gen_rand_vecs(self):
+        """
+        define random unit vectors
+
+        @return: the random unit vector for the scheduled 3D system
+        """
+        vecs = np.random.normal(size = (self.number, self.dims))
 
-    # np.linalg.norm returns the Norm of the matrix or vector(s).
-    mags = np.linalg.norm(vecs, axis = -1)
+        # np.linalg.norm returns the Norm of the matrix or vector(s).
+        mags = np.linalg.norm(vecs, axis = -1)
 
-    return vecs / mags[..., np.newaxis]
+        return vecs / mags[..., np.newaxis]
 
 
-# generate random unit vectors in 3D in amount of n1*n2*n3
-rand_vec = gen_rand_vecs(3, np.prod(system_size)).reshape(system_size + (3,))
+    def get_random_vecs(self):
+        """
+        generate the random vectors
+
+        @return: the random vectors
+        """
+        rand_vec = self.gen_rand_vecs().reshape(system_size + (self.dims,))
 
-# abs of R(x,y) with random modules
-r_xy = np.random.standard_normal(np.prod(system_size)).reshape(system_size)
+        # abs of R(x,y) with random modules
+        r_xy = np.random.standard_normal(np.prod(system_size)).reshape(system_size)
 
-# initialize magnetization - m is a 4D list
-# the first dimension is n_x on the grid;
-# the second dimension is n_y on the grid;
-# the third dimension is n_z on the grid;
-# the fourth dimension refers to (m_x, m_y, m_x])
-mangetization = np.zeros(system_size + (3,))
-mangetization[1:-1, :, :, 0] = 1.0
-mangetization[(-1, 0), :, :, 1] = 1.0
-# print(len(mangetization), len(mangetization[0]), len(mangetization[0][0]), len(mangetization[0][0][0]))
-# print(mangetization)
+        return rand_vec, r_xy
+
+
+    def get_init_magnetization(self):
+        """
+        generate random unit vectors in 3D in amount of n1*n2*n3
+
+        @return: the randomly distributed magnetization
+        """
+        # initialize magnetization - m is a 4D list
+        # the first dimension is n_x on the grid;
+        # the second dimension is n_y on the grid;
+        # the third dimension is n_z on the grid;
+        # the fourth dimension refers to (m_x, m_y, m_x])
+        magnetization = np.zeros(system_size + (self.dims,))
+        magnetization[1:-1, :, :, 0] = 1.0
+        magnetization[(-1, 0), :, :, 1] = 1.0
+        # print(len(magnetization), len(magnetization[0]), len(magnetization[0][0]), len(magnetization[0][0][0]))
+        # print(magnetization)
+
+        return magnetization
Index: demag_tensor.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- demag_tensor.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ demag_tensor.py	(date 1605515768735)
@@ -2,68 +2,76 @@
 import numpy as np
 from constant import system_size, mesh
 
-# a very small number to avoid divide by zero
-eps = 1e-18
+
+class AuxiliaryFunctions:
+    """
+    auxiliary function to calculate demag tensor
+    """
+
+    def __init__(self, eps=1e-18):
+        # a very small number to avoid divide by zero
+        self.eps = eps
+
+        # setup demag tensor
+        self.n_demag = np.zeros([1 if i == 1 else 2 * i for i in system_size] + [6])
+        for i, t in enumerate(((self.aux_f, 0, 1, 2), (self.aux_g, 0, 1, 2), (self.aux_g, 0, 2, 1),
+                               (self.aux_f, 1, 2, 0), (self.aux_g, 1, 2, 0), (self.aux_f, 2, 0, 1))):
+            self.set_n_demag(i, t[1:], t[0])
 
+        self.m_pad = np.zeros([1 if i == 1 else 2 * i for i in system_size] + [3])
 
-def aux_f(point):
-    """
-    auxiliary function to calculate demag tensor:
-    J. Newell, W. Williams, and D. J. Dunlop "exchange_coeff generalization of the demagnetizing tensor for nonuniform magnetization"
+        self.f_n_demag = np.fft.rfftn(self.n_demag, axes = filter(lambda i: system_size[i] > 1, range(3)))
+
+
+    def aux_f(self, point):
+        """
+        auxiliary function to calculate demag tensor:
+        J. Newell, W. Williams, and D. J. Dunlop "exchange_coeff generalization of the demagnetizing tensor for nonuniform magnetization"
 
-    @type p: object
-    """
-    x, y, z = abs(point[0]), abs(point[1]), abs(point[2])
+        @type p: object
+        """
+        x, y, z = abs(point[0]), abs(point[1]), abs(point[2])
 
-    return + y / 2.0 * (z ** 2 - x ** 2) * asinh(y / (sqrt(x ** 2 + z ** 2) + eps))\
-           + z / 2.0 * (y ** 2 - x ** 2) * asinh(z / (sqrt(x ** 2 + y ** 2) + eps))\
-           - x * y * z * atan(y * z / (x * sqrt(x ** 2 + y ** 2 + z ** 2) + eps))\
-           + 1.0 / 6.0 * (2 * x ** 2 - y ** 2 - z ** 2) * sqrt(x ** 2 + y ** 2 + z ** 2)
+        return + y / 2.0 * (z ** 2 - x ** 2) * asinh(y / (sqrt(x ** 2 + z ** 2) + self.eps)) \
+               + z / 2.0 * (y ** 2 - x ** 2) * asinh(z / (sqrt(x ** 2 + y ** 2) + self.eps)) \
+               - x * y * z * atan(y * z / (x * sqrt(x ** 2 + y ** 2 + z ** 2) + self.eps)) \
+               + 1.0 / 6.0 * (2 * x ** 2 - y ** 2 - z ** 2) * sqrt(x ** 2 + y ** 2 + z ** 2)
 
 
-def aux_g(point):
-    """
-    auxiliary function to calculate demag tensor:
-    J. Newell, W. Williams, and D. J. Dunlop "exchange_coeff generalization of the demagnetizing tensor for nonuniform magnetization"
+    def aux_g(self, point):
+        """
+        auxiliary function to calculate demag tensor:
+        J. Newell, W. Williams, and D. J. Dunlop "exchange_coeff generalization of the demagnetizing tensor for nonuniform magnetization"
 
-    @type point: object
-    """
-    x, y, z = abs(point[0]), abs(point[1]), abs(point[2])
+        @type point: object
+        """
+        x, y, z = abs(point[0]), abs(point[1]), abs(point[2])
 
-    return + x * y * z * asinh(z / (sqrt(x ** 2 + y ** 2) + eps))\
-           + y / 6.0 * (3.0 * z ** 2 - y ** 2) * asinh(x / (sqrt(y ** 2 + z ** 2) + eps))\
-           + x / 6.0 * (3.0 * z ** 2 - x ** 2) * asinh(y / (sqrt(x ** 2 + z ** 2) + eps))\
-           - z ** 3 / 6.0 * atan(x * y / (z * sqrt(x ** 2 + y ** 2 + z ** 2) + eps))\
-           - z * y ** 2 / 2.0 * atan(x * z / (y * sqrt(x ** 2 + y ** 2 + z ** 2) + eps))\
-           - z * x ** 2 / 2.0 * atan(y * z / (x * sqrt(x ** 2 + y ** 2 + z ** 2) + eps))\
-           - x * y * sqrt(x ** 2 + y ** 2 + z ** 2) / 3.0
+        return + x * y * z * asinh(z / (sqrt(x ** 2 + y ** 2) + self.eps)) \
+               + y / 6.0 * (3.0 * z ** 2 - y ** 2) * asinh(x / (sqrt(y ** 2 + z ** 2) + self.eps)) \
+               + x / 6.0 * (3.0 * z ** 2 - x ** 2) * asinh(y / (sqrt(x ** 2 + z ** 2) + self.eps)) \
+               - z ** 3 / 6.0 * atan(x * y / (z * sqrt(x ** 2 + y ** 2 + z ** 2) + self.eps)) \
+               - z * y ** 2 / 2.0 * atan(x * z / (y * sqrt(x ** 2 + y ** 2 + z ** 2) + self.eps)) \
+               - z * x ** 2 / 2.0 * atan(y * z / (x * sqrt(x ** 2 + y ** 2 + z ** 2) + self.eps)) \
+               - x * y * sqrt(x ** 2 + y ** 2 + z ** 2) / 3.0
 
 
-def set_n_demag(dimension, permute, func):
-    """
-    demag tensor setup
+    def set_n_demag(self, dimension, permute, func):
+        """
+        demag tensor setup
 
-    @type permute: object
-    """
+        @type permute: object
+        """
 
-    # numpy.nditer is an efficient multi-dimensional iterator object to iterate over arrays
-    it = np.nditer(n_demag[:, :, :, dimension], flags = ['multi_index'], op_flags = ['writeonly'])
+        # numpy.nditer is an efficient multi-dimensional iterator object to iterate over arrays
+        it = np.nditer(self.n_demag[:, :, :, dimension], flags = ['multi_index'], op_flags = ['writeonly'])
 
-    while not it.finished:
-        value = 0.0
+        while not it.finished:
+            value = 0.0
 
-        for i in np.rollaxis(np.indices((2,) * 6), 0, 7).reshape(64, 6):
-            idx = map(lambda k: (it.multi_index[k] + system_size[k]) % (2 * system_size[k]) - system_size[k], range(3))
-            value += (-1) ** sum(i) * func(map(lambda j: (idx[j] + i[j] - i[j + 3]) * mesh[j], permute))
+            for i in np.rollaxis(np.indices((2,) * 6), 0, 7).reshape(64, 6):
+                idx = map(lambda k: (it.multi_index[k] + system_size[k]) % (2 * system_size[k]) - system_size[k], range(3))
+                value += (-1) ** sum(i) * func(map(lambda j: (idx[j] + i[j] - i[j + 3]) * mesh[j], permute))
 
-        it[0] = - value / (4 * pi * np.prod(mesh))
-        it.iternext()
-
-
-# setup demag tensor
-n_demag = np.zeros([1 if i == 1 else 2 * i for i in system_size] + [6])
-for i, t in enumerate(((aux_f, 0, 1, 2), (aux_g, 0, 1, 2), (aux_g, 0, 2, 1), (aux_f, 1, 2, 0), (aux_g, 1, 2, 0), (aux_f, 2, 0, 1))):
-    set_n_demag(i, t[1:], t[0])
-
-m_pad = np.zeros([1 if i == 1 else 2 * i for i in system_size] + [3])
-f_n_demag = np.fft.rfftn(n_demag, axes = filter(lambda i: system_size[i] > 1, range(3)))
+            it[0] = - value / (4 * pi * np.prod(mesh))
+            it.iternext()
Index: file_IO.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- file_IO.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ file_IO.py	(date 1605512949168)
@@ -2,36 +2,43 @@
 from constant import system_size
 
 
-def save_magnetization(magnetization, file):
-    """
-    save magnetization to file
+class FileIO:
+    """
+    file IO read the data and write the data
+    """
+
+    def save_magnetization(magnetization, file):
+        """
+        save magnetization to file
 
-    @type magnetization: object
-    """
-    np.savetxt(file, (magnetization[:, :, :, 0].flatten(), magnetization[:, :, :, 1].flatten(), magnetization[:, :, :, 2].flatten()))
+        @type magnetization: object
+        """
+        np.savetxt(file, (magnetization[:, :, :, 0].flatten(),
+                          magnetization[:, :, :, 1].flatten(),
+                          magnetization[:, :, :, 2].flatten()))
 
 
-def load_magnetization(file):
-    """
-    load magnetization from the imput file
+    def load_magnetization(file):
+        """
+        load magnetization from the imput file
 
-    @type file: object
-    """
-    mag_file = np.loadtxt(file)
-    magnetization = np.zeros(system_size + (3,))
+        @type file: object
+        """
+        mag_file = np.loadtxt(file)
+        magnetization = np.zeros(system_size + (3,))
 
-    for i in range(3):
-        magnetization[:, :, :, i] = mag_file[i, :].reshape(magnetization[:, :, :, i].shape)
+        for i in range(3):
+            magnetization[:, :, :, i] = mag_file[i, :].reshape(magnetization[:, :, :, i].shape)
 
-    return magnetization
+        return magnetization
 
 
-def load_field_sweep(file):
-    """
-    load field distribution from input file
+    def load_field_sweep(file):
+        """
+        load field distribution from input file
 
-    @type file: object
-    """
-    n = np.loadtxt(file)
+        @type file: object
+        """
+        n = np.loadtxt(file)
 
-    return n[:, 0:3], n[:, 3]
\ No newline at end of file
+        return n[:, 0:3], n[:, 3]
\ No newline at end of file
Index: sweep_field.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- sweep_field.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ sweep_field.py	(date 1605516097134)
@@ -1,27 +1,45 @@
 import numpy as np
 from constant import oe2am, system_size, delta_t
-from initialize_system import mangetization
-from plot_system_state import plot_magnetization, save_magnetization_fig
-from solver import gradient_descent
-from get_magnetization import mean_x, mean_y, mean_z, mean_magnetization
+from initialize_system import InitializeSystem
+from plottings import Plottings
+from minimizers_gradient_descent import Minimizers
+from get_magnetization import GetMagnetization
 import os
 
-curr_folder = os.getcwd()
-curr_folder = os.path.join(curr_folder, "data")
 
+"""
+Below is a demo for a standard problem: 
+switching the magnetization by sweeping the external magnetization
+"""
 
 H = np.arange(-500, 501, 100) * oe2am  # in exchange_coeff/m
+
+init_sys = InitializeSystem(3, np.prod(system_size))
+magnetization = init_sys.get_init_magnetization()
+plottings = Plottings(magnetization)
+
 data = []
 i = 0
+
+curr_folder = os.getcwd()
+curr_folder = os.path.join(curr_folder, "data")
+
 for k in H:
-    save_magnetization_fig(mangetization, save_fig_name = "time =" + str(i) + "s")
-    h_zee = np.tile([k, 0.0, 0.0], np.prod(system_size)).reshape(mangetization.shape)
+    plottings.save_magnetization_fig(save_fig_name = "time =" + str(i) + "s")
+
+    h_zee = np.tile([k, 0.0, 0.0], np.prod(system_size)).reshape(magnetization.shape)
     print "H = %e A/m" % (k)
-    gradient_descent(mangetization, delta_t, h_zee)
-    mx = mean_x(mangetization)
-    my = mean_y(mangetization)
-    mz = mean_z(mangetization)
+
+    minimizers = Minimizers()
+    minimizers.gradient_descent(magnetization, delta_t, h_zee)
+
+    get_mag = GetMagnetization(magnetization)
+    mx = get_mag.mean_x()
+    my = get_mag.mean_y()
+    mz = get_mag.mean_z()
+
     data.append([mx, my, mz, k])
+
     i += 1
 
 np.savetxt(curr_folder + "\Hx_sweep.dat", data)
\ No newline at end of file
Index: field_calculation.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- field_calculation.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ field_calculation.py	(date 1605515720114)
@@ -1,109 +1,122 @@
 import numpy as np
-from demag_tensor import f_n_demag, m_pad
+from demag_tensor import AuxiliaryFunctions
 from constant import system_size, mesh, saturation_magnetization, exchange_coeff, mu0, constant_fiend, Mpd3fe, anisotropy_coeff_ku_1, anisotropy_coeff_ku_2
-from initialize_system import rand_vec, r_xy
+from initialize_system import InitializeSystem
 
 
-def initialize_magnetization(magnetization):
+class FieldCalcutaton:
     """
-    Initialize magnetization field
+    calculate demagnetization field, exchange field, anisotropy field
+    """
+
+    def initialize_magnetization(self, magnetization):
+        """
+        Initialize magnetization field
 
-    @type magnetization: object
-    @return initialized magnetization in the 3D system
-    """
+        @type magnetization: object
+        @return initialized magnetization in the 3D system
+        """
 
-    e_dot_m = (rand_vec * magnetization).sum(axis = 3)  # scalar product of e*m
-    R_xy = e_dot_m * r_xy  # modules of R(x,y)*m(x,y)
+        init_sys = InitializeSystem(3, np.prod(system_size))
+        rand_vec, r_xy = init_sys.get_random_vecs()
+
+        e_dot_m = (rand_vec * magnetization).sum(axis = 3)  # scalar product of e*m
+        R_xy = e_dot_m * r_xy  # modules of R(x,y)*m(x,y)
 
-    initialized_mag_field = rand_vec * R_xy.reshape(system_size + (1,))  # anisotropy random vectors
+        initialized_mag_field = rand_vec * R_xy.reshape(system_size + (1,))  # anisotropy random vectors
 
-    return initialized_mag_field
+        return initialized_mag_field
 
 
-def calculate_demagnetization_field(magnetization):
-    """
-    calculate demagnetization field using Fourier Transform, refer to the two papers below
-    W. Scholz, J. Fidler, T. Schre, D. Suess, R. Dittrich, H. Forster, and V. Tsiantos,
-    "Scal-able parallel micromagnetic solvers for magnetic nanostructures,"
-    Computational Materials Science, vol. 28, no. 2, pp. 366-383, 2003.
+    def calculate_demagnetization_field(self, magnetization):
+        """
+        calculate demagnetization field using Fourier Transform, refer to the two papers below
+        W. Scholz, J. Fidler, T. Schre, D. Suess, R. Dittrich, H. Forster, and V. Tsiantos,
+        "Scal-able parallel micromagnetic solvers for magnetic nanostructures,"
+        Computational Materials Science, vol. 28, no. 2, pp. 366-383, 2003.
 
-    D. Suess, V. Tsiantos, T. Schre, J. Fidler, W. Scholz, H. Forster, R. Dittrich, and J. Miles,
-    "Time resolved micromagnetics using a preconditioned time integration method"
-    Journal of Magnetism and Magnetic Materials, vol. 248, no. 2, pp. 298-311, 2002.
+        D. Suess, V. Tsiantos, T. Schre, J. Fidler, W. Scholz, H. Forster, R. Dittrich, and J. Miles,
+        "Time resolved micromagnetics using a preconditioned time integration method"
+        Journal of Magnetism and Magnetic Materials, vol. 248, no. 2, pp. 298-311, 2002.
 
-    @type magnetization: object
-    @return demagnetization field
-    """
-
-    m_pad[:system_size[0], :system_size[1], :system_size[2], :] = magnetization
-    f_m_pad = np.fft.rfftn(m_pad, axes = filter(lambda i: system_size[i] > 1, range(3)))
+        @type magnetization: object
+        @return demagnetization field
+        """
+        aux_funcs = AuxiliaryFunctions()
+        aux_funcs.m_pad[:system_size[0], :system_size[1], :system_size[2], :] = magnetization
+        f_m_pad = np.fft.rfftn(aux_funcs.m_pad, axes = filter(lambda i: system_size[i] > 1, range(3)))
 
-    f_h_demag_pad = np.zeros(f_m_pad.shape, dtype = f_m_pad.dtype)
-    f_h_demag_pad[:, :, :, 0] = (f_n_demag[:, :, :, (0, 1, 2)] * f_m_pad).sum(axis = 3)
-    f_h_demag_pad[:, :, :, 1] = (f_n_demag[:, :, :, (1, 3, 4)] * f_m_pad).sum(axis = 3)
-    f_h_demag_pad[:, :, :, 2] = (f_n_demag[:, :, :, (2, 4, 5)] * f_m_pad).sum(axis = 3)
-    h_demag = np.fft.irfftn(f_h_demag_pad, axes = filter(lambda i: system_size[i] > 1, range(3)))[:system_size[0], :system_size[1], :system_size[2], :]
+        f_h_demag_pad = np.zeros(f_m_pad.shape, dtype = f_m_pad.dtype)
+        f_h_demag_pad[:, :, :, 0] = (aux_funcs.f_n_demag[:, :, :, (0, 1, 2)] * f_m_pad).sum(axis = 3)
+        f_h_demag_pad[:, :, :, 1] = (aux_funcs.f_n_demag[:, :, :, (1, 3, 4)] * f_m_pad).sum(axis = 3)
+        f_h_demag_pad[:, :, :, 2] = (aux_funcs.f_n_demag[:, :, :, (2, 4, 5)] * f_m_pad).sum(axis = 3)
+        h_demag = np.fft.irfftn(f_h_demag_pad,
+                                axes = filter(lambda i: system_size[i] > 1, range(3)))[:system_size[0], :system_size[1], :system_size[2], :]
 
-    return h_demag
+        return h_demag
 
 
-def calculate_exchange_field(magnetization):
-    """
-    calculate the exchange field, using the 6-neighbors exchange coupling method
-    Krawczyk, Maciej, et al.
-    "On the formulation of the exchange field in the Landau-Lifshitz equation for spin-wave calculation in magnonic crystals."
-    Advances in Condensed Matter Physics 2012 (2012).
+    def calculate_exchange_field(self, magnetization):
+        """
+        calculate the exchange field, using the 6-neighbors exchange coupling method
+        Krawczyk, Maciej, et al.
+        "On the formulation of the exchange field in the Landau-Lifshitz equation for spin-wave calculation in magnonic crystals."
+        Advances in Condensed Matter Physics 2012 (2012).
 
-    @type magnetization: object
-    @return exchange field
-    """
+        @type magnetization: object
+        @return exchange field
+        """
 
-    h_ex = - 2 * magnetization * sum([1 / x ** 2 for x in mesh])
-    for i in range(6):  # we adopt six-neighbor model for exchange coupling calculation
-        if system_size[i % 3] == 1:
-            h_ex += np.repeat(magnetization, 1, axis = i % 3) / mesh[i % 3] ** 2
-        else:
-            h_ex += np.repeat(magnetization, [i / 3 * 2] + [1] * (system_size[i % 3] - 2) + [2 - i / 3 * 2], axis = i % 3) / mesh[i % 3] ** 2
+        h_ex = - 2 * magnetization * sum([1 / x ** 2 for x in mesh])
+        for i in range(6):  # we adopt six-neighbor model for exchange coupling calculation
+            if system_size[i % 3] == 1:
+                h_ex += np.repeat(magnetization, 1, axis = i % 3) / mesh[i % 3] ** 2
+            else:
+                h_ex += np.repeat(magnetization, [i / 3 * 2] + [1] * (system_size[i % 3] - 2) +
+                                  [2 - i / 3 * 2], axis = i % 3) / mesh[i % 3] ** 2
 
-    return h_ex
+        return h_ex
 
 
-def uniaxial_anisotropy(magnetization):
-    """
-    calculate anisotropy field. here we only care about the 1st fold anisotropy field
-    Ding, Jinjun, et al. "Nanometer-thick yttrium iron garnet films with perpendicular anisotropy and low damping."
-    Physical Review Applied 14.1 (2020): 014017.
+    def uniaxial_anisotropy(self, magnetization):
+        """
+        calculate anisotropy field. here we only care about the 1st fold anisotropy field
+        Ding, Jinjun, et al. "Nanometer-thick yttrium iron garnet films with perpendicular anisotropy and low damping."
+        Physical Review Applied 14.1 (2020): 014017.
 
-    @type magnetization: object
-    """
-    h_anisotropy = 2 * anisotropy_coeff_ku_1 / saturation_magnetization
+        @type magnetization: object
+        """
+        h_anisotropy = 2 * anisotropy_coeff_ku_1 / saturation_magnetization
 
-    return h_anisotropy
+        return h_anisotropy
 
 
-def uniaxial_anisotropy_2(magnetization):
-    """
-    calculate anisotropy field. here we only care about both the 1st fold anisotropy field, and the 2nd fold anisotropy field
-    Ding, Jinjun, et al. "Nanometer-thick yttrium iron garnet films with perpendicular anisotropy and low damping."
-    Physical Review Applied 14.1 (2020): 014017.
+    def uniaxial_anisotropy_2(self, magnetization):
+        """
+        calculate anisotropy field. here we only care about both the 1st fold anisotropy field, and the 2nd fold anisotropy field
+        Ding, Jinjun, et al. "Nanometer-thick yttrium iron garnet films with perpendicular anisotropy and low damping."
+        Physical Review Applied 14.1 (2020): 014017.
 
-    @type magnetization: object
-    """
-    h_anisotropy_1 = 2 * anisotropy_coeff_ku_1 / saturation_magnetization
-    h_anisotropy_2 = 2 * anisotropy_coeff_ku_2 / saturation_magnetization
+        @type magnetization: object
+        """
+        h_anisotropy_1 = 2 * anisotropy_coeff_ku_1 / saturation_magnetization
+        h_anisotropy_2 = 2 * anisotropy_coeff_ku_2 / saturation_magnetization
 
-    return h_anisotropy_1 + h_anisotropy_2
+        return h_anisotropy_1 + h_anisotropy_2
 
 
-def calculate_effective_field(magnetization):
-    """
-    compute the effective field, which include initialized magnetization, demagnetization field, exchange field and anisotropy field
+    def calculate_effective_field(self, magnetization):
+        """
+        compute the effective field, which include initialized magnetization, demagnetization field, exchange field and anisotropy field
 
-    @type magnetization: object
-    """
-    initialized_field = initialize_magnetization(magnetization) * constant_fiend * (saturation_magnetization / Mpd3fe)
-    demag_field = (calculate_demagnetization_field(magnetization) * saturation_magnetization) * (saturation_magnetization / Mpd3fe)
-    exchange_field = 2 * exchange_coeff / (mu0 * saturation_magnetization) * calculate_exchange_field(magnetization) * (saturation_magnetization / Mpd3fe)
-    anisotropy_field = uniaxial_anisotropy_2(magnetization) * (saturation_magnetization / Mpd3fe)
+        @type magnetization: object
+        """
+        initialized_field = self.initialize_magnetization(magnetization) * constant_fiend * \
+                            (saturation_magnetization / Mpd3fe)
+        demag_field = (self.calculate_demagnetization_field(magnetization) * saturation_magnetization) * \
+                      (saturation_magnetization / Mpd3fe)
+        exchange_field = 2 * exchange_coeff / (mu0 * saturation_magnetization) * \
+                         self.calculate_exchange_field(magnetization) * (saturation_magnetization / Mpd3fe)
+        anisotropy_field = self.uniaxial_anisotropy_2(magnetization) * (saturation_magnetization / Mpd3fe)
 
-    return initialized_field + demag_field + exchange_field + anisotropy_field
+        return initialized_field + demag_field + exchange_field + anisotropy_field
Index: standard_problem.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- standard_problem.py	(revision 81c1c502c15a21c40a3f24fcbb03d9faca9cd189)
+++ standard_problem.py	(date 1605514058684)
@@ -1,34 +1,40 @@
-from constant import mu0, system_size
-from initialize_system import mangetization
+from constant import mu0, system_size, damping_constant
+from initialize_system import InitializeSystem
 import numpy as np
-from solver import llg_rk4_evolver
-from plot_system_state import plot_magnetization
-
+from minimizers_gradient_descent import Minimizers
+from plottings import Plottings
 import os
 
+"""
+Below is a demo for a standard problem: 
+switching the magnetization by an external magnetization
+"""
 
-# gradient_descent
-alpha = 0.5
+init_sys = InitializeSystem(3, np.prod(system_size))
+magnetization = init_sys.get_init_magnetization()
+plottings = Plottings(magnetization)
+minimizers = Minimizers()
+
 for i in range(5000):
-    llg_rk4_evolver(mangetization, 1e-13)
+    minimizers.llg_rk4_evolver(magnetization, 1e-13)
 print "Relaxed"
-plot_magnetization(mangetization)
+plottings.plot_magnetization(k=1)
 
-# switch
+
 alpha = 0.02
 dt = 1e-12
 
 # numpy.tile construct an array by repeating exchange_coeff the number of times given by reps
 # numpy.prod return the product of array elements over a given axis
-h_zee = np.tile([-24.6e-3 / mu0, +4.3e-3 / mu0, 0.0], np.prod(system_size)).reshape(mangetization.shape)
-
+h_zee = np.tile([-24.6e-3 / mu0, +4.3e-3 / mu0, 0.0], np.prod(system_size)).reshape(magnetization.shape)
 
 curr_folder = os.getcwd()
 curr_folder = os.path.join(curr_folder, "data")
+
 with open(curr_folder + '/standard_problem.dat', 'w') as f:
     for i in range(int(10e-10 / dt)):
-        f.write("%f %f %f %f\n" % ((i * 1e9 * dt,) + tuple(map(lambda i: np.mean(mangetization[:, :, :, i]), range(3)))))
-        m0 = np.copy(mangetization)
-        mangetization = llg_rk4_evolver(mangetization, dt, h_zee)           # run llg_rk4 is pretty much like making one prediction
+        f.write("%f %f %f %f\n" % ((i * 1e9 * dt,) + tuple(map(lambda i: np.mean(magnetization[:, :, :, i]), range(3)))))
+        m0 = np.copy(magnetization)
+        magnetization = minimizers.llg_rk4_evolver(magnetization, dt, h_zee)           # run llg_rk4 is pretty much like making one prediction
 
-plot_magnetization(mangetization)
+plottings.plot_magnetization(k=1)
diff --git New Microsoft PowerPoint Presentation.pptx New Microsoft PowerPoint Presentation.pptx
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

